// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_response.proto
package com.sigmob.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;


public final class AndroidMarket extends AndroidMessage<AndroidMarket, AndroidMarket.Builder> {
    public static final ProtoAdapter<AndroidMarket> ADAPTER = new ProtoAdapter_AndroidMarket();

    public static final Parcelable.Creator<AndroidMarket> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_MARKET_URL = "";

    public static final String DEFAULT_APP_PACKAGE_NAME = "";

    public static final String DEFAULT_APPSTORE_PACKAGE_NAME = "";

    public static final Integer DEFAULT_TYPE = 0;

    /**
     * market跳转Url
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String market_url;

    /**
     * 下载的应用包名
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String app_package_name;

    /**
     * 指定的应用市场包名
     */
    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String appstore_package_name;

    /**
     * 商店下载类型:0 普通商店下载，1. 小米直投2.0 下载;
     */
    @WireField(
            tag = 4,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer type;

    public AndroidMarket(String market_url, String app_package_name, String appstore_package_name,
                         Integer type) {
        this(market_url, app_package_name, appstore_package_name, type, ByteString.EMPTY);
    }

    public AndroidMarket(String market_url, String app_package_name, String appstore_package_name,
                         Integer type, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.market_url = market_url;
        this.app_package_name = app_package_name;
        this.appstore_package_name = appstore_package_name;
        this.type = type;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.market_url = market_url;
        builder.app_package_name = app_package_name;
        builder.appstore_package_name = appstore_package_name;
        builder.type = type;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof AndroidMarket)) return false;
        AndroidMarket o = (AndroidMarket) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(market_url, o.market_url)
                && Internal.equals(app_package_name, o.app_package_name)
                && Internal.equals(appstore_package_name, o.appstore_package_name)
                && Internal.equals(type, o.type);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (market_url != null ? market_url.hashCode() : 0);
            result = result * 37 + (app_package_name != null ? app_package_name.hashCode() : 0);
            result = result * 37 + (appstore_package_name != null ? appstore_package_name.hashCode() : 0);
            result = result * 37 + (type != null ? type.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (market_url != null) builder.append(", market_url=").append(market_url);
        if (app_package_name != null)
            builder.append(", app_package_name=").append(app_package_name);
        if (appstore_package_name != null)
            builder.append(", appstore_package_name=").append(appstore_package_name);
        if (type != null) builder.append(", type=").append(type);
        return builder.replace(0, 2, "AndroidMarket{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<AndroidMarket, Builder> {
        public String market_url;

        public String app_package_name;

        public String appstore_package_name;

        public Integer type;

        public Builder() {
        }

        /**
         * market跳转Url
         */
        public Builder market_url(String market_url) {
            this.market_url = market_url;
            return this;
        }

        /**
         * 下载的应用包名
         */
        public Builder app_package_name(String app_package_name) {
            this.app_package_name = app_package_name;
            return this;
        }

        /**
         * 指定的应用市场包名
         */
        public Builder appstore_package_name(String appstore_package_name) {
            this.appstore_package_name = appstore_package_name;
            return this;
        }

        /**
         * 商店下载类型:0 普通商店下载，1. 小米直投2.0 下载;
         */
        public Builder type(Integer type) {
            this.type = type;
            return this;
        }

        @Override
        public AndroidMarket build() {
            return new AndroidMarket(market_url, app_package_name, appstore_package_name, type, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_AndroidMarket extends ProtoAdapter<AndroidMarket> {
        public ProtoAdapter_AndroidMarket() {
            super(FieldEncoding.LENGTH_DELIMITED, AndroidMarket.class);
        }

        @Override
        public int encodedSize(AndroidMarket value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.market_url)
                    + ProtoAdapter.STRING.encodedSizeWithTag(2, value.app_package_name)
                    + ProtoAdapter.STRING.encodedSizeWithTag(3, value.appstore_package_name)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.type)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, AndroidMarket value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.market_url);
            ProtoAdapter.STRING.encodeWithTag(writer, 2, value.app_package_name);
            ProtoAdapter.STRING.encodeWithTag(writer, 3, value.appstore_package_name);
            ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.type);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public AndroidMarket decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.market_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.app_package_name(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 3:
                        builder.appstore_package_name(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 4:
                        builder.type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public AndroidMarket redact(AndroidMarket value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
