// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_config.proto
package com.sigmob.sdk.base.models.config;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class SigmobSdkConfigResponse extends AndroidMessage<SigmobSdkConfigResponse, SigmobSdkConfigResponse.Builder> {
    public static final ProtoAdapter<SigmobSdkConfigResponse> ADAPTER = new ProtoAdapter_SigmobSdkConfigResponse();

    public static final Parcelable.Creator<SigmobSdkConfigResponse> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_CODE = 0;

    public static final String DEFAULT_ERROR_MESSAGE = "";

    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer code;

    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String error_message;

    @WireField(
            tag = 3,
            adapter = "com.sigmob.sdk.base.models.config.SigmobSdkConfig#ADAPTER"
    )
    public final SigmobSdkConfig config;

    public SigmobSdkConfigResponse(Integer code, String error_message, SigmobSdkConfig config) {
        this(code, error_message, config, ByteString.EMPTY);
    }

    public SigmobSdkConfigResponse(Integer code, String error_message, SigmobSdkConfig config,
                                   ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.code = code;
        this.error_message = error_message;
        this.config = config;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.code = code;
        builder.error_message = error_message;
        builder.config = config;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof SigmobSdkConfigResponse)) return false;
        SigmobSdkConfigResponse o = (SigmobSdkConfigResponse) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(code, o.code)
                && Internal.equals(error_message, o.error_message)
                && Internal.equals(config, o.config);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (code != null ? code.hashCode() : 0);
            result = result * 37 + (error_message != null ? error_message.hashCode() : 0);
            result = result * 37 + (config != null ? config.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (code != null) builder.append(", code=").append(code);
        if (error_message != null) builder.append(", error_message=").append(error_message);
        if (config != null) builder.append(", config=").append(config);
        return builder.replace(0, 2, "SigmobSdkConfigResponse{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<SigmobSdkConfigResponse, Builder> {
        public Integer code;

        public String error_message;

        public SigmobSdkConfig config;

        public Builder() {
        }

        public Builder code(Integer code) {
            this.code = code;
            return this;
        }

        public Builder error_message(String error_message) {
            this.error_message = error_message;
            return this;
        }

        public Builder config(SigmobSdkConfig config) {
            this.config = config;
            return this;
        }

        @Override
        public SigmobSdkConfigResponse build() {
            return new SigmobSdkConfigResponse(code, error_message, config, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_SigmobSdkConfigResponse extends ProtoAdapter<SigmobSdkConfigResponse> {
        public ProtoAdapter_SigmobSdkConfigResponse() {
            super(FieldEncoding.LENGTH_DELIMITED, SigmobSdkConfigResponse.class);
        }

        @Override
        public int encodedSize(SigmobSdkConfigResponse value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.code)
                    + ProtoAdapter.STRING.encodedSizeWithTag(2, value.error_message)
                    + SigmobSdkConfig.ADAPTER.encodedSizeWithTag(3, value.config)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, SigmobSdkConfigResponse value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.code);
            ProtoAdapter.STRING.encodeWithTag(writer, 2, value.error_message);
            SigmobSdkConfig.ADAPTER.encodeWithTag(writer, 3, value.config);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public SigmobSdkConfigResponse decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.code(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.error_message(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 3:
                        builder.config(SigmobSdkConfig.ADAPTER.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public SigmobSdkConfigResponse redact(SigmobSdkConfigResponse value) {
            Builder builder = value.newBuilder();
            if (builder.config != null)
                builder.config = SigmobSdkConfig.ADAPTER.redact(builder.config);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
