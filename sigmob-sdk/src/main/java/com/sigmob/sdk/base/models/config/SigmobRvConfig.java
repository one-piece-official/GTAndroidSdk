// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_config.proto
package com.sigmob.sdk.base.models.config;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

/**
 * 激励视频配置
 */
public final class SigmobRvConfig extends AndroidMessage<SigmobRvConfig, SigmobRvConfig.Builder> {
    public static final ProtoAdapter<SigmobRvConfig> ADAPTER = new ProtoAdapter_SigmobRvConfig();

    public static final Parcelable.Creator<SigmobRvConfig> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_CACHETOP = 0;

    public static final Integer DEFAULT_AD_LOAD_TIMEOUT = 0;

    /**
     * 本地缓存上限
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer cacheTop;

    /**
     * 广告总超时
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer ad_load_timeout;

    /**
     * 激励视频关闭对话框配置
     */
    @WireField(
            tag = 3,
            adapter = "com.sigmob.sdk.base.models.config.SigmobDialogSetting#ADAPTER"
    )
    public final SigmobDialogSetting close_dialog_setting;

    public SigmobRvConfig(Integer cacheTop, Integer ad_load_timeout,
                          SigmobDialogSetting close_dialog_setting) {
        this(cacheTop, ad_load_timeout, close_dialog_setting, ByteString.EMPTY);
    }

    public SigmobRvConfig(Integer cacheTop, Integer ad_load_timeout,
                          SigmobDialogSetting close_dialog_setting, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.cacheTop = cacheTop;
        this.ad_load_timeout = ad_load_timeout;
        this.close_dialog_setting = close_dialog_setting;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.cacheTop = cacheTop;
        builder.ad_load_timeout = ad_load_timeout;
        builder.close_dialog_setting = close_dialog_setting;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof SigmobRvConfig)) return false;
        SigmobRvConfig o = (SigmobRvConfig) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(cacheTop, o.cacheTop)
                && Internal.equals(ad_load_timeout, o.ad_load_timeout)
                && Internal.equals(close_dialog_setting, o.close_dialog_setting);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (cacheTop != null ? cacheTop.hashCode() : 0);
            result = result * 37 + (ad_load_timeout != null ? ad_load_timeout.hashCode() : 0);
            result = result * 37 + (close_dialog_setting != null ? close_dialog_setting.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (cacheTop != null) builder.append(", cacheTop=").append(cacheTop);
        if (ad_load_timeout != null) builder.append(", ad_load_timeout=").append(ad_load_timeout);
        if (close_dialog_setting != null)
            builder.append(", close_dialog_setting=").append(close_dialog_setting);
        return builder.replace(0, 2, "SigmobRvConfig{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<SigmobRvConfig, Builder> {
        public Integer cacheTop;

        public Integer ad_load_timeout;

        public SigmobDialogSetting close_dialog_setting;

        public Builder() {
        }

        /**
         * 本地缓存上限
         */
        public Builder cacheTop(Integer cacheTop) {
            this.cacheTop = cacheTop;
            return this;
        }

        /**
         * 广告总超时
         */
        public Builder ad_load_timeout(Integer ad_load_timeout) {
            this.ad_load_timeout = ad_load_timeout;
            return this;
        }

        /**
         * 激励视频关闭对话框配置
         */
        public Builder close_dialog_setting(SigmobDialogSetting close_dialog_setting) {
            this.close_dialog_setting = close_dialog_setting;
            return this;
        }

        @Override
        public SigmobRvConfig build() {
            return new SigmobRvConfig(cacheTop, ad_load_timeout, close_dialog_setting, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_SigmobRvConfig extends ProtoAdapter<SigmobRvConfig> {
        public ProtoAdapter_SigmobRvConfig() {
            super(FieldEncoding.LENGTH_DELIMITED, SigmobRvConfig.class);
        }

        @Override
        public int encodedSize(SigmobRvConfig value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.cacheTop)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.ad_load_timeout)
                    + SigmobDialogSetting.ADAPTER.encodedSizeWithTag(3, value.close_dialog_setting)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, SigmobRvConfig value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.cacheTop);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.ad_load_timeout);
            SigmobDialogSetting.ADAPTER.encodeWithTag(writer, 3, value.close_dialog_setting);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public SigmobRvConfig decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.cacheTop(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.ad_load_timeout(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 3:
                        builder.close_dialog_setting(SigmobDialogSetting.ADAPTER.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public SigmobRvConfig redact(SigmobRvConfig value) {
            Builder builder = value.newBuilder();
            if (builder.close_dialog_setting != null)
                builder.close_dialog_setting = SigmobDialogSetting.ADAPTER.redact(builder.close_dialog_setting);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
