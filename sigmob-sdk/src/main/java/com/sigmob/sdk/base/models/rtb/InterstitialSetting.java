// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_response.proto
package com.sigmob.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class InterstitialSetting extends AndroidMessage<InterstitialSetting, InterstitialSetting.Builder> {
    public static final ProtoAdapter<InterstitialSetting> ADAPTER = new ProtoAdapter_InterstitialSetting();

    public static final Parcelable.Creator<InterstitialSetting> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_IF_MUTE = 0;

    public static final Integer DEFAULT_SHOW_SKIP_SECONDS = 0;

    public static final Boolean DEFAULT_SKIP_CLOSE_AD = false;

    public static final Integer DEFAULT_SKIP_POSITION = 3;

    public static final Integer DEFAULT_ENDCARD_CLOSE_POSITION = 3;

    public static final Integer DEFAULT_MUTE_POSITION = 1;

    public static final Integer DEFAULT_SHAKE_LEVEL = 0;

    public static final Integer DEFAULT_CHARGE_TIME = 5;

    public static final Boolean DEFAULT_DISABLE_AUTO_LOAD = false;

    /**
     * 广告是否静音（0:静音、1:非静音。default=0）
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer if_mute;

    /**
     * 倒计时/跳过按钮 倒计时出现时间输入值，默认是0 s
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer show_skip_seconds;

    /**
     * 点击跳过时，是否直接关闭广告（默认false）
     */
    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean skip_close_ad;

    /**
     * 跳过按钮+同页面的关闭按钮位置，左上：1，左下：2，右上（默认）：3，右下：4
     */
    @WireField(
            tag = 4,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer skip_position;

    /**
     * endcard关闭按钮位置，左上：1, 左下：2，右上（默认）：3，右下：4，
     */
    @WireField(
            tag = 5,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer endcard_close_position;

    /**
     * 静音按钮位置， 左上：1(默认），左下：2，右上：3，右下：4，
     */
    @WireField(
            tag = 6,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer mute_position;

    /**
     * 用户摇一摇的力度 1:低 2:中 3:高
     */
    @WireField(
            tag = 7,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer shake_level;

    /**
     * 视频素材的结算点的打点时间 默认 5s，取值范围[0,30]
     */
    @WireField(
            tag = 8,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer charge_time;

    /**
     * 关闭广告播放中的自动加载逻辑
     * 关闭广告播放中的自动加载逻辑
     */
    @WireField(
            tag = 9,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean disable_auto_load;

    public InterstitialSetting(Integer if_mute, Integer show_skip_seconds, Boolean skip_close_ad,
                               Integer skip_position, Integer endcard_close_position, Integer mute_position,
                               Integer shake_level, Integer charge_time, Boolean disable_auto_load) {
        this(if_mute, show_skip_seconds, skip_close_ad, skip_position, endcard_close_position, mute_position, shake_level, charge_time, disable_auto_load, ByteString.EMPTY);
    }

    public InterstitialSetting(Integer if_mute, Integer show_skip_seconds, Boolean skip_close_ad,
                               Integer skip_position, Integer endcard_close_position, Integer mute_position,
                               Integer shake_level, Integer charge_time, Boolean disable_auto_load,
                               ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.if_mute = if_mute;
        this.show_skip_seconds = show_skip_seconds;
        this.skip_close_ad = skip_close_ad;
        this.skip_position = skip_position;
        this.endcard_close_position = endcard_close_position;
        this.mute_position = mute_position;
        this.shake_level = shake_level;
        this.charge_time = charge_time;
        this.disable_auto_load = disable_auto_load;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.if_mute = if_mute;
        builder.show_skip_seconds = show_skip_seconds;
        builder.skip_close_ad = skip_close_ad;
        builder.skip_position = skip_position;
        builder.endcard_close_position = endcard_close_position;
        builder.mute_position = mute_position;
        builder.shake_level = shake_level;
        builder.charge_time = charge_time;
        builder.disable_auto_load = disable_auto_load;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof InterstitialSetting)) return false;
        InterstitialSetting o = (InterstitialSetting) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(if_mute, o.if_mute)
                && Internal.equals(show_skip_seconds, o.show_skip_seconds)
                && Internal.equals(skip_close_ad, o.skip_close_ad)
                && Internal.equals(skip_position, o.skip_position)
                && Internal.equals(endcard_close_position, o.endcard_close_position)
                && Internal.equals(mute_position, o.mute_position)
                && Internal.equals(shake_level, o.shake_level)
                && Internal.equals(charge_time, o.charge_time)
                && Internal.equals(disable_auto_load, o.disable_auto_load);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (if_mute != null ? if_mute.hashCode() : 0);
            result = result * 37 + (show_skip_seconds != null ? show_skip_seconds.hashCode() : 0);
            result = result * 37 + (skip_close_ad != null ? skip_close_ad.hashCode() : 0);
            result = result * 37 + (skip_position != null ? skip_position.hashCode() : 0);
            result = result * 37 + (endcard_close_position != null ? endcard_close_position.hashCode() : 0);
            result = result * 37 + (mute_position != null ? mute_position.hashCode() : 0);
            result = result * 37 + (shake_level != null ? shake_level.hashCode() : 0);
            result = result * 37 + (charge_time != null ? charge_time.hashCode() : 0);
            result = result * 37 + (disable_auto_load != null ? disable_auto_load.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (if_mute != null) builder.append(", if_mute=").append(if_mute);
        if (show_skip_seconds != null)
            builder.append(", show_skip_seconds=").append(show_skip_seconds);
        if (skip_close_ad != null) builder.append(", skip_close_ad=").append(skip_close_ad);
        if (skip_position != null) builder.append(", skip_position=").append(skip_position);
        if (endcard_close_position != null)
            builder.append(", endcard_close_position=").append(endcard_close_position);
        if (mute_position != null) builder.append(", mute_position=").append(mute_position);
        if (shake_level != null) builder.append(", shake_level=").append(shake_level);
        if (charge_time != null) builder.append(", charge_time=").append(charge_time);
        if (disable_auto_load != null)
            builder.append(", disable_auto_load=").append(disable_auto_load);
        return builder.replace(0, 2, "InterstitialSetting{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<InterstitialSetting, Builder> {
        public Integer if_mute = DEFAULT_IF_MUTE;

        public Integer show_skip_seconds = DEFAULT_SHOW_SKIP_SECONDS;

        public Boolean skip_close_ad = DEFAULT_SKIP_CLOSE_AD;

        public Integer skip_position = DEFAULT_SKIP_POSITION;

        public Integer endcard_close_position = DEFAULT_ENDCARD_CLOSE_POSITION;

        public Integer mute_position = DEFAULT_MUTE_POSITION;

        public Integer shake_level = DEFAULT_SHAKE_LEVEL;

        public Integer charge_time = DEFAULT_CHARGE_TIME;

        public Boolean disable_auto_load = DEFAULT_DISABLE_AUTO_LOAD;

        public Builder() {
        }

        /**
         * 广告是否静音（0:静音、1:非静音。default=0）
         */
        public Builder if_mute(Integer if_mute) {
            this.if_mute = if_mute;
            return this;
        }

        /**
         * 倒计时/跳过按钮 倒计时出现时间输入值，默认是0 s
         */
        public Builder show_skip_seconds(Integer show_skip_seconds) {
            this.show_skip_seconds = show_skip_seconds;
            return this;
        }

        /**
         * 点击跳过时，是否直接关闭广告（默认false）
         */
        public Builder skip_close_ad(Boolean skip_close_ad) {
            this.skip_close_ad = skip_close_ad;
            return this;
        }

        /**
         * 跳过按钮+同页面的关闭按钮位置，左上：1，左下：2，右上（默认）：3，右下：4
         */
        public Builder skip_position(Integer skip_position) {
            this.skip_position = skip_position;
            return this;
        }

        /**
         * endcard关闭按钮位置，左上：1, 左下：2，右上（默认）：3，右下：4，
         */
        public Builder endcard_close_position(Integer endcard_close_position) {
            this.endcard_close_position = endcard_close_position;
            return this;
        }

        /**
         * 静音按钮位置， 左上：1(默认），左下：2，右上：3，右下：4，
         */
        public Builder mute_position(Integer mute_position) {
            this.mute_position = mute_position;
            return this;
        }

        /**
         * 用户摇一摇的力度 1:低 2:中 3:高
         */
        public Builder shake_level(Integer shake_level) {
            this.shake_level = shake_level;
            return this;
        }

        /**
         * 视频素材的结算点的打点时间 默认 5s，取值范围[0,30]
         */
        public Builder charge_time(Integer charge_time) {
            this.charge_time = charge_time;
            return this;
        }

        /**
         * 关闭广告播放中的自动加载逻辑
         * 关闭广告播放中的自动加载逻辑
         */
        public Builder disable_auto_load(Boolean disable_auto_load) {
            this.disable_auto_load = disable_auto_load;
            return this;
        }

        @Override
        public InterstitialSetting build() {
            return new InterstitialSetting(if_mute, show_skip_seconds, skip_close_ad, skip_position, endcard_close_position, mute_position, shake_level, charge_time, disable_auto_load, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_InterstitialSetting extends ProtoAdapter<InterstitialSetting> {
        public ProtoAdapter_InterstitialSetting() {
            super(FieldEncoding.LENGTH_DELIMITED, InterstitialSetting.class);
        }

        @Override
        public int encodedSize(InterstitialSetting value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.if_mute)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.show_skip_seconds)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(3, value.skip_close_ad)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.skip_position)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.endcard_close_position)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(6, value.mute_position)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(7, value.shake_level)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(8, value.charge_time)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(9, value.disable_auto_load)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, InterstitialSetting value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.if_mute);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.show_skip_seconds);
            ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.skip_close_ad);
            ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.skip_position);
            ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.endcard_close_position);
            ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.mute_position);
            ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.shake_level);
            ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.charge_time);
            ProtoAdapter.BOOL.encodeWithTag(writer, 9, value.disable_auto_load);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public InterstitialSetting decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.if_mute(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.show_skip_seconds(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 3:
                        builder.skip_close_ad(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 4:
                        builder.skip_position(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 5:
                        builder.endcard_close_position(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 6:
                        builder.mute_position(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 7:
                        builder.shake_level(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 8:
                        builder.charge_time(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 9:
                        builder.disable_auto_load(ProtoAdapter.BOOL.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public InterstitialSetting redact(InterstitialSetting value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
