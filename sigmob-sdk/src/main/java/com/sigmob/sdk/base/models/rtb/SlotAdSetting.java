// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_response.proto
package com.sigmob.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class SlotAdSetting extends AndroidMessage<SlotAdSetting, SlotAdSetting.Builder> {
  public static final ProtoAdapter<SlotAdSetting> ADAPTER = new ProtoAdapter_SlotAdSetting();

  public static final Parcelable.Creator<SlotAdSetting> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RETRY_COUNT = 0;

  public static final Boolean DEFAULT_DISABLE_X_REQUESTED_WITH = false;

  public static final Integer DEFAULT_APK_DOWNLOAD_TYPE = 0;

  public static final Boolean DEFAULT_RESUMABLE_DOWNLOAD = false;

  public static final Boolean DEFAULT_USE_DOWNLOADED_APK = false;

  /**
   * 激励视频相关广告设置
   */
  @WireField(
      tag = 1,
      adapter = "com.sigmob.sdk.base.models.rtb.RvAdSetting#ADAPTER"
  )
  public final RvAdSetting rv_setting;

  /**
   * 开屏广告相关配置
   */
  @WireField(
      tag = 2,
      adapter = "com.sigmob.sdk.base.models.rtb.SplashAdSetting#ADAPTER"
  )
  public final SplashAdSetting splash_setting;

  /**
   * 原生广告相关设置
   */
  @WireField(
      tag = 3,
      adapter = "com.sigmob.sdk.base.models.rtb.NativeAdSetting#ADAPTER"
  )
  public final NativeAdSetting native_setting;

  /**
   * 重试次数（0:不重试）
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer retry_count;

  /**
   * 禁止WebView携带x-requested-with请求头，默认false不禁止，true为禁止
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean disable_x_requested_with;

  /**
   * 新插屏的相关配置
   */
  @WireField(
      tag = 6,
      adapter = "com.sigmob.sdk.base.models.rtb.InterstitialSetting#ADAPTER"
  )
  public final InterstitialSetting interstitial_setting;

  /**
   * apk 下载类型，0: 系统下载, 1 自定义下载器单任务单线下载, 2: 自定义下载器单任务多线程下载
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer apk_download_type;

  /**
   * 支持断点续传下载, 默认false不使用，true为使用
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean resumable_download;

  /**
   * 使用已经下载完成的apk, 默认false不使用，true为使用
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean use_downloaded_apk;

  public SlotAdSetting(RvAdSetting rv_setting, SplashAdSetting splash_setting,
      NativeAdSetting native_setting, Integer retry_count, Boolean disable_x_requested_with,
      InterstitialSetting interstitial_setting, Integer apk_download_type,
      Boolean resumable_download, Boolean use_downloaded_apk) {
    this(rv_setting, splash_setting, native_setting, retry_count, disable_x_requested_with, interstitial_setting, apk_download_type, resumable_download, use_downloaded_apk, ByteString.EMPTY);
  }

  public SlotAdSetting(RvAdSetting rv_setting, SplashAdSetting splash_setting,
      NativeAdSetting native_setting, Integer retry_count, Boolean disable_x_requested_with,
      InterstitialSetting interstitial_setting, Integer apk_download_type,
      Boolean resumable_download, Boolean use_downloaded_apk, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.rv_setting = rv_setting;
    this.splash_setting = splash_setting;
    this.native_setting = native_setting;
    this.retry_count = retry_count;
    this.disable_x_requested_with = disable_x_requested_with;
    this.interstitial_setting = interstitial_setting;
    this.apk_download_type = apk_download_type;
    this.resumable_download = resumable_download;
    this.use_downloaded_apk = use_downloaded_apk;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.rv_setting = rv_setting;
    builder.splash_setting = splash_setting;
    builder.native_setting = native_setting;
    builder.retry_count = retry_count;
    builder.disable_x_requested_with = disable_x_requested_with;
    builder.interstitial_setting = interstitial_setting;
    builder.apk_download_type = apk_download_type;
    builder.resumable_download = resumable_download;
    builder.use_downloaded_apk = use_downloaded_apk;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SlotAdSetting)) return false;
    SlotAdSetting o = (SlotAdSetting) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(rv_setting, o.rv_setting)
        && Internal.equals(splash_setting, o.splash_setting)
        && Internal.equals(native_setting, o.native_setting)
        && Internal.equals(retry_count, o.retry_count)
        && Internal.equals(disable_x_requested_with, o.disable_x_requested_with)
        && Internal.equals(interstitial_setting, o.interstitial_setting)
        && Internal.equals(apk_download_type, o.apk_download_type)
        && Internal.equals(resumable_download, o.resumable_download)
        && Internal.equals(use_downloaded_apk, o.use_downloaded_apk);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (rv_setting != null ? rv_setting.hashCode() : 0);
      result = result * 37 + (splash_setting != null ? splash_setting.hashCode() : 0);
      result = result * 37 + (native_setting != null ? native_setting.hashCode() : 0);
      result = result * 37 + (retry_count != null ? retry_count.hashCode() : 0);
      result = result * 37 + (disable_x_requested_with != null ? disable_x_requested_with.hashCode() : 0);
      result = result * 37 + (interstitial_setting != null ? interstitial_setting.hashCode() : 0);
      result = result * 37 + (apk_download_type != null ? apk_download_type.hashCode() : 0);
      result = result * 37 + (resumable_download != null ? resumable_download.hashCode() : 0);
      result = result * 37 + (use_downloaded_apk != null ? use_downloaded_apk.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (rv_setting != null) builder.append(", rv_setting=").append(rv_setting);
    if (splash_setting != null) builder.append(", splash_setting=").append(splash_setting);
    if (native_setting != null) builder.append(", native_setting=").append(native_setting);
    if (retry_count != null) builder.append(", retry_count=").append(retry_count);
    if (disable_x_requested_with != null) builder.append(", disable_x_requested_with=").append(disable_x_requested_with);
    if (interstitial_setting != null) builder.append(", interstitial_setting=").append(interstitial_setting);
    if (apk_download_type != null) builder.append(", apk_download_type=").append(apk_download_type);
    if (resumable_download != null) builder.append(", resumable_download=").append(resumable_download);
    if (use_downloaded_apk != null) builder.append(", use_downloaded_apk=").append(use_downloaded_apk);
    return builder.replace(0, 2, "SlotAdSetting{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SlotAdSetting, Builder> {
    public RvAdSetting rv_setting;

    public SplashAdSetting splash_setting;

    public NativeAdSetting native_setting;

        public Integer retry_count = DEFAULT_RETRY_COUNT;

        public Boolean disable_x_requested_with = DEFAULT_DISABLE_X_REQUESTED_WITH;

        public InterstitialSetting interstitial_setting;

        public Integer apk_download_type = DEFAULT_APK_DOWNLOAD_TYPE;

        public Boolean resumable_download = DEFAULT_RESUMABLE_DOWNLOAD;
        public Boolean use_downloaded_apk = DEFAULT_USE_DOWNLOADED_APK;

    public Builder() {
    }

    /**
     * 激励视频相关广告设置
     */
    public Builder rv_setting(RvAdSetting rv_setting) {
      this.rv_setting = rv_setting;
      return this;
    }

    /**
     * 开屏广告相关配置
     */
    public Builder splash_setting(SplashAdSetting splash_setting) {
      this.splash_setting = splash_setting;
      return this;
    }

    /**
     * 原生广告相关设置
     */
    public Builder native_setting(NativeAdSetting native_setting) {
      this.native_setting = native_setting;
      return this;
    }

    /**
     * 重试次数（0:不重试）
     */
    public Builder retry_count(Integer retry_count) {
      this.retry_count = retry_count;
      return this;
    }

    /**
     * 禁止WebView携带x-requested-with请求头，默认false不禁止，true为禁止
     */
    public Builder disable_x_requested_with(Boolean disable_x_requested_with) {
      this.disable_x_requested_with = disable_x_requested_with;
      return this;
    }

    /**
     * 新插屏的相关配置
     */
    public Builder interstitial_setting(InterstitialSetting interstitial_setting) {
      this.interstitial_setting = interstitial_setting;
      return this;
    }

    /**
     * apk 下载类型，0: 系统下载, 1 自定义下载器单任务单线下载, 2: 自定义下载器单任务多线程下载
     */
    public Builder apk_download_type(Integer apk_download_type) {
      this.apk_download_type = apk_download_type;
      return this;
    }

    /**
     * 支持断点续传下载, 默认false不使用，true为使用
     */
    public Builder resumable_download(Boolean resumable_download) {
      this.resumable_download = resumable_download;
      return this;
    }

    /**
     * 使用已经下载完成的apk, 默认false不使用，true为使用
     */
    public Builder use_downloaded_apk(Boolean use_downloaded_apk) {
      this.use_downloaded_apk = use_downloaded_apk;
      return this;
    }

    @Override
    public SlotAdSetting build() {
      return new SlotAdSetting(rv_setting, splash_setting, native_setting, retry_count, disable_x_requested_with, interstitial_setting, apk_download_type, resumable_download, use_downloaded_apk, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SlotAdSetting extends ProtoAdapter<SlotAdSetting> {
    public ProtoAdapter_SlotAdSetting() {
      super(FieldEncoding.LENGTH_DELIMITED, SlotAdSetting.class);
    }

    @Override
    public int encodedSize(SlotAdSetting value) {
      return RvAdSetting.ADAPTER.encodedSizeWithTag(1, value.rv_setting)
          + SplashAdSetting.ADAPTER.encodedSizeWithTag(2, value.splash_setting)
          + NativeAdSetting.ADAPTER.encodedSizeWithTag(3, value.native_setting)
          + ProtoAdapter.INT32.encodedSizeWithTag(4, value.retry_count)
          + ProtoAdapter.BOOL.encodedSizeWithTag(5, value.disable_x_requested_with)
          + InterstitialSetting.ADAPTER.encodedSizeWithTag(6, value.interstitial_setting)
          + ProtoAdapter.UINT32.encodedSizeWithTag(7, value.apk_download_type)
          + ProtoAdapter.BOOL.encodedSizeWithTag(8, value.resumable_download)
          + ProtoAdapter.BOOL.encodedSizeWithTag(9, value.use_downloaded_apk)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SlotAdSetting value) throws IOException {
      RvAdSetting.ADAPTER.encodeWithTag(writer, 1, value.rv_setting);
      SplashAdSetting.ADAPTER.encodeWithTag(writer, 2, value.splash_setting);
      NativeAdSetting.ADAPTER.encodeWithTag(writer, 3, value.native_setting);
      ProtoAdapter.INT32.encodeWithTag(writer, 4, value.retry_count);
      ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.disable_x_requested_with);
      InterstitialSetting.ADAPTER.encodeWithTag(writer, 6, value.interstitial_setting);
      ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.apk_download_type);
      ProtoAdapter.BOOL.encodeWithTag(writer, 8, value.resumable_download);
      ProtoAdapter.BOOL.encodeWithTag(writer, 9, value.use_downloaded_apk);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SlotAdSetting decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.rv_setting(RvAdSetting.ADAPTER.decode(reader)); break;
          case 2: builder.splash_setting(SplashAdSetting.ADAPTER.decode(reader)); break;
          case 3: builder.native_setting(NativeAdSetting.ADAPTER.decode(reader)); break;
          case 4: builder.retry_count(ProtoAdapter.INT32.decode(reader)); break;
          case 5: builder.disable_x_requested_with(ProtoAdapter.BOOL.decode(reader)); break;
          case 6: builder.interstitial_setting(InterstitialSetting.ADAPTER.decode(reader)); break;
          case 7: builder.apk_download_type(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.resumable_download(ProtoAdapter.BOOL.decode(reader)); break;
          case 9: builder.use_downloaded_apk(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SlotAdSetting redact(SlotAdSetting value) {
      Builder builder = value.newBuilder();
      if (builder.rv_setting != null) builder.rv_setting = RvAdSetting.ADAPTER.redact(builder.rv_setting);
      if (builder.splash_setting != null) builder.splash_setting = SplashAdSetting.ADAPTER.redact(builder.splash_setting);
      if (builder.native_setting != null) builder.native_setting = NativeAdSetting.ADAPTER.redact(builder.native_setting);
      if (builder.interstitial_setting != null) builder.interstitial_setting = InterstitialSetting.ADAPTER.redact(builder.interstitial_setting);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
