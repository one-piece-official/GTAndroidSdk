// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_response.proto
package com.sigmob.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.sdk.common.models.Size;
import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;
import com.sigmob.sdk.base.models.WebEventHandle;

import java.io.IOException;
import java.util.List;

/**
 * 广告物料元数据信息
 */
public final class MaterialMeta extends AndroidMessage<MaterialMeta, MaterialMeta.Builder> {
    public static final ProtoAdapter<MaterialMeta> ADAPTER = new ProtoAdapter_MaterialMeta();

    public static final Parcelable.Creator<MaterialMeta> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_CREATIVE_TYPE = 0;

    public static final Integer DEFAULT_INTERACTION_TYPE = 0;

    public static final String DEFAULT_LANDING_PAGE = "";

    public static final String DEFAULT_VIDEO_URL = "";

    public static final Integer DEFAULT_VIDEO_DURATION = 0;

    public static final ByteString DEFAULT_HTML_SNIPPET = ByteString.EMPTY;

    public static final String DEFAULT_ENDCARD_URL = "";

    public static final String DEFAULT_VIDEO_MD5 = "";

    public static final String DEFAULT_ENDCARD_MD5 = "";

    public static final String DEFAULT_DEEPLINK_URL = "";

    public static final String DEFAULT_IMAGE_SRC = "";

    public static final String DEFAULT_IMAGE_MD5 = "";

    public static final Integer DEFAULT_IMAGE_TYPE = 0;

    public static final Integer DEFAULT_CLICK_TYPE = 0;

    public static final Boolean DEFAULT_HAS_COMPANION_ENDCARD = false;

    public static final Integer DEFAULT_TEMPLATE_TYPE = 0;

    public static final Integer DEFAULT_VIDEO_RECIPROCAL_MILLISECOND = 0;

    public static final String DEFAULT_HTML_URL = "";

    public static final Boolean DEFAULT_ENABLE_COLLAPSE_TOOL_BAR = false;

    public static final Integer DEFAULT_OPEN_MARKET_MODE = 0;

    public static final Integer DEFAULT_PLAY_MODE = 0;

    public static final Integer DEFAULT_SUB_INTERACTION_TYPE = 0;

    public static final String DEFAULT_TITLE = "";

    public static final String DEFAULT_DESC = "";

    public static final String DEFAULT_ICON_URL = "";

    public static final Float DEFAULT_SCORE = 0.0f;

    public static final Integer DEFAULT_TEMPLATE_ID = 0;

    public static final Boolean DEFAULT_DISABLE_AUTO_DEEPLINK = false;

    public static final ByteString DEFAULT_CLOSECARD_HTML_SNIPPET = ByteString.EMPTY;

    public static final String DEFAULT_APP_NAME = "";

    public static final String DEFAULT_BUTTON_TEXT = "";

    public static final Integer DEFAULT_VIDEO_BYTE_SIZE = 0;

    public static final String DEFAULT_HTML_SRC = "";

    public static final Boolean DEFAULT_DOWNLOAD_DIALOG = false;

    public static final Integer DEFAULT_THEME_DATA = 0;

    public static final Boolean DEFAULT_IN_APP = false;

    public static final String DEFAULT_ENDCARD_IMAGE_SRC = "";

    public static final String DEFAULT_CREATIVE_TITLE = "";

    public static final Boolean DEFAULT_HAS_ENDCARD = false;

    public static final String DEFAULT_APK_MD5 = "";

    /**
     * 创意类型：1=奖励视频广告的资源包形式(endcard为tgz包)，一般由video、endcard资源包构成；3=纯静态图片广告，一般由单张image_src构成;4=video+html源代码的模式;5=预留;6=video定帧+htmlsrc;7=video+landingpage(相当于在线endcard)；8单个视频；9 MRAID(The Mobile Rich Media Ad Interface Definitions system)
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer creative_type;

    /**
     * 广告交互类型。1=使用浏览器打开；2=下载应用;3=deeplink唤醒失败，执行下载
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer interaction_type;

    /**
     * 广告目标地址
     */
    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String landing_page;

    /**
     * 视频物料地址
     */
    @WireField(
            tag = 4,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String video_url;

    /**
     * 视频物料时长
     */
    @WireField(
            tag = 5,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer video_duration;

    /**
     * 视频尺寸
     */
    @WireField(
            tag = 6,
            adapter = "com.sigmob.sdk.common.models.Size#ADAPTER"
    )
    public final Size video_size;

    /**
     * HTML片段，中文需要UTF-8编码. 激励视频广告时,存放Endcard的H5代码.
     */
    @WireField(
            tag = 7,
            adapter = "com.squareup.wire.ProtoAdapter#BYTES"
    )
    public final ByteString html_snippet;

    /**
     * Endcard地址，sigmob为资源包的方式
     */
    @WireField(
            tag = 8,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String endcard_url;

    /**
     * 视频的md5
     */
    @WireField(
            tag = 9,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String video_md5;

    /**
     * Endcard的md5
     */
    @WireField(
            tag = 10,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String endcard_md5;

    /**
     * deeplink url
     */
    @WireField(
            tag = 11,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String deeplink_url;

    /**
     * 广告图片地址
     */
    @WireField(
            tag = 12,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String image_src;

    /**
     * 广告图片尺寸
     */
    @WireField(
            tag = 13,
            adapter = "com.sigmob.sdk.common.models.Size#ADAPTER"
    )
    public final Size image_size;

    /**
     * 图片的md5值
     */
    @WireField(
            tag = 14,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String image_md5;

    /**
     * 图片素材的格式编码，0:unknown 1:jpeg,jpg 2:png 3:gif
     */
    @WireField(
            tag = 15,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer image_type;

    /**
     * 点击类型，1=按钮点击，2=全屏点击
     */
    @WireField(
            tag = 16,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer click_type;

    /**
     * 是否包含伴随广告的素材
     */
    @WireField(
            tag = 17,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean has_companion_endcard;

    /**
     * 伴随广告的素材对象
     */
    @WireField(
            tag = 18,
            adapter = "com.sigmob.sdk.base.models.rtb.CompanionEndcard#ADAPTER"
    )
    public final CompanionEndcard companion;

    /**
     * html事件交互定义与sdk的事件交互对象
     */
    @WireField(
            tag = 19,
            adapter = "com.sigmob.sdk.base.models.rtb.WebEventHandle#ADAPTER"
    )
    public final WebEventHandle web_event_handle;

    /**
     * 开屏:{1:跳过+广告合一+logo模版,2:跳过+广告模版}, 激励视频:{1:星级模版,2:描述模版}
     */
    @WireField(
            tag = 20,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer template_type;

    /**
     * 视频播放结束后，停留的倒数（99999999:首帧；-99999999:尾帧；正数：正数第几毫秒；负数：倒数第几毫秒；0:取默认值）
     */
    @WireField(
            tag = 21,
            adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer video_reciprocal_millisecond;

    /**
     * html素材地址(表单类投放可使用html_url+按钮点击+landing_page为空)
     */
    @WireField(
            tag = 22,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String html_url;

    /**
     * 是否允许收起\展开工具条（通过单击视频)，false不允许，true允许
     */
    @WireField(
            tag = 23,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean enable_collapse_tool_bar;

    /**
     * 打开应用市场的模式， 0:appstore半屏打开，1:全屏打开（目前仅ios使用）
     */
    @WireField(
            tag = 24,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer open_market_mode;

    /**
     * 播放模式，0:预加载模式，1:在线流媒体播放模式
     */
    @WireField(
            tag = 25,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer play_mode;

    /**
     * 子交互类型，0:无效, 1:广点通下载类型
     */
    @WireField(
            tag = 26,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer sub_interaction_type;

    /**
     * 广告标题(ssp v3.4.0开始加入)
     */
    @WireField(
            tag = 27,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String title;

    /**
     * 广告描述(ssp v3.4.0开始加入)
     */
    @WireField(
            tag = 28,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String desc;

    /**
     * 广告icon图片(ssp v3.4.0开始加入，未来CompanionEndcard中字段将废弃)
     */
    @WireField(
            tag = 29,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String icon_url;

    /**
     * 下载类app的星级，小数，例如4.5表示4星半（目前用在伴随广告），score大于等于1才有效(ssp v3.4.0开始加入，未来CompanionEndcard中字段将废弃)
     */
    @WireField(
            tag = 30,
            adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
    )
    public final Float score;

    /**
     * 模板id
     */
    @WireField(
            tag = 31,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer template_id;

    /**
     * 是否禁止deeplink自动唤起
     */
    @WireField(
            tag = 32,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean disable_auto_deeplink;

    /**
     * 关闭页推荐HTML片段
     */
    @WireField(
            tag = 33,
            adapter = "com.squareup.wire.ProtoAdapter#BYTES"
    )
    public final ByteString closecard_html_snippet;

    /**
     * 广告应用名称
     */
    @WireField(
            tag = 34,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String app_name;

    /**
     * 广告按钮文案
     */
    @WireField(
            tag = 35,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String button_text;

    /**
     * 广告隐私信息
     */
    @WireField(
            tag = 36,
            adapter = "com.sigmob.sdk.base.models.rtb.AdPrivacy#ADAPTER"
    )
    public final AdPrivacy ad_privacy;

    /**
     * 视频大小，单位：字节
     */
    @WireField(
            tag = 37,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer video_byte_size;

    /**
     * html代码片段
     */
    @WireField(
            tag = 38,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String html_src;

    /**
     * 原生广告
     */
    @WireField(
            tag = 39,
            adapter = "com.sigmob.sdk.base.models.rtb.ResponseNativeAd#ADAPTER"
    )
    public final ResponseNativeAd native_ad;

    /**
     * 下载需要先弹四要素，默认false 下载不弹四要素，true为下载弹四要素弹框
     */
    @WireField(
            tag = 40,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean download_dialog;

    /**
     * 应用市场跳转
     */
    @WireField(
            tag = 41,
            adapter = "com.sigmob.sdk.base.models.rtb.AndroidMarket#ADAPTER"
    )
    public final AndroidMarket android_market;

    /**
     * 当前广告的主模版
     */
    @WireField(
            tag = 42,
            adapter = "com.sigmob.sdk.base.models.rtb.Template#ADAPTER"
    )
    public final Template main_template;

    /**
     * 当前广告的字模版
     */
    @WireField(
            tag = 43,
            adapter = "com.sigmob.sdk.base.models.rtb.Template#ADAPTER"
    )
    public final Template sub_template;

    /**
     * 素材资源
     */
    @WireField(
            tag = 44,
            adapter = "com.sigmob.sdk.base.models.rtb.ResponseAsset#ADAPTER",
            label = WireField.Label.REPEATED
    )
    public final List<ResponseAsset> asset;

    /**
     * 0: 主题非半透明；1: 主题半透明
     */
    @WireField(
            tag = 45,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer theme_data;

    /**
     * 是否在应用内打开landing_page true:是
     */
    @WireField(
            tag = 46,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean in_app;

    /**
     * endcard图片（暂时用于插屏兜底原生模版）
     */
    @WireField(
            tag = 47,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String endcard_image_src;

    /**
     * 创意标题
     */
    @WireField(
            tag = 48,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String creative_title;

    /**
     * 是否有endcard
     */
    @WireField(
            tag = 49,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean has_endcard;

    /**
     * 按钮颜色
     */
    @WireField(
            tag = 50,
            adapter = "com.sigmob.sdk.base.models.rtb.Color#ADAPTER"
    )
    public final Color button_color;

    /**
     * 挂件列表
     */
    @WireField(
            tag = 51,
            adapter = "com.sigmob.sdk.base.models.rtb.Widget#ADAPTER",
            label = WireField.Label.REPEATED
    )
    public final List<Widget> Widget_list;

    /**
     * apk下载文件的md5值
     */
    @WireField(
            tag = 52,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String apk_md5;

    public MaterialMeta(Integer creative_type, Integer interaction_type, String landing_page,
                        String video_url, Integer video_duration, Size video_size, ByteString html_snippet,
                        String endcard_url, String video_md5, String endcard_md5, String deeplink_url,
                        String image_src, Size image_size, String image_md5, Integer image_type, Integer click_type,
                        Boolean has_companion_endcard, CompanionEndcard companion, WebEventHandle web_event_handle,
                        Integer template_type, Integer video_reciprocal_millisecond, String html_url,
                        Boolean enable_collapse_tool_bar, Integer open_market_mode, Integer play_mode,
                        Integer sub_interaction_type, String title, String desc, String icon_url, Float score,
                        Integer template_id, Boolean disable_auto_deeplink, ByteString closecard_html_snippet,
                        String app_name, String button_text, AdPrivacy ad_privacy, Integer video_byte_size,
                        String html_src, ResponseNativeAd native_ad, Boolean download_dialog,
                        AndroidMarket android_market, Template main_template, Template sub_template,
                        List<ResponseAsset> asset, Integer theme_data, Boolean in_app, String endcard_image_src,
                        String creative_title, Boolean has_endcard, Color button_color, List<Widget> Widget_list,
                        String apk_md5) {
        this(creative_type, interaction_type, landing_page, video_url, video_duration, video_size, html_snippet, endcard_url, video_md5, endcard_md5, deeplink_url, image_src, image_size, image_md5, image_type, click_type, has_companion_endcard, companion, web_event_handle, template_type, video_reciprocal_millisecond, html_url, enable_collapse_tool_bar, open_market_mode, play_mode, sub_interaction_type, title, desc, icon_url, score, template_id, disable_auto_deeplink, closecard_html_snippet, app_name, button_text, ad_privacy, video_byte_size, html_src, native_ad, download_dialog, android_market, main_template, sub_template, asset, theme_data, in_app, endcard_image_src, creative_title, has_endcard, button_color, Widget_list, apk_md5, ByteString.EMPTY);
    }

    public MaterialMeta(Integer creative_type, Integer interaction_type, String landing_page,
                        String video_url, Integer video_duration, Size video_size, ByteString html_snippet,
                        String endcard_url, String video_md5, String endcard_md5, String deeplink_url,
                        String image_src, Size image_size, String image_md5, Integer image_type, Integer click_type,
                        Boolean has_companion_endcard, CompanionEndcard companion, WebEventHandle web_event_handle,
                        Integer template_type, Integer video_reciprocal_millisecond, String html_url,
                        Boolean enable_collapse_tool_bar, Integer open_market_mode, Integer play_mode,
                        Integer sub_interaction_type, String title, String desc, String icon_url, Float score,
                        Integer template_id, Boolean disable_auto_deeplink, ByteString closecard_html_snippet,
                        String app_name, String button_text, AdPrivacy ad_privacy, Integer video_byte_size,
                        String html_src, ResponseNativeAd native_ad, Boolean download_dialog,
                        AndroidMarket android_market, Template main_template, Template sub_template,
                        List<ResponseAsset> asset, Integer theme_data, Boolean in_app, String endcard_image_src,
                        String creative_title, Boolean has_endcard, Color button_color, List<Widget> Widget_list,
                        String apk_md5, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.creative_type = creative_type;
        this.interaction_type = interaction_type;
        this.landing_page = landing_page;
        this.video_url = video_url;
        this.video_duration = video_duration;
        this.video_size = video_size;
        this.html_snippet = html_snippet;
        this.endcard_url = endcard_url;
        this.video_md5 = video_md5;
        this.endcard_md5 = endcard_md5;
        this.deeplink_url = deeplink_url;
        this.image_src = image_src;
        this.image_size = image_size;
        this.image_md5 = image_md5;
        this.image_type = image_type;
        this.click_type = click_type;
        this.has_companion_endcard = has_companion_endcard;
        this.companion = companion;
        this.web_event_handle = web_event_handle;
        this.template_type = template_type;
        this.video_reciprocal_millisecond = video_reciprocal_millisecond;
        this.html_url = html_url;
        this.enable_collapse_tool_bar = enable_collapse_tool_bar;
        this.open_market_mode = open_market_mode;
        this.play_mode = play_mode;
        this.sub_interaction_type = sub_interaction_type;
        this.title = title;
        this.desc = desc;
        this.icon_url = icon_url;
        this.score = score;
        this.template_id = template_id;
        this.disable_auto_deeplink = disable_auto_deeplink;
        this.closecard_html_snippet = closecard_html_snippet;
        this.app_name = app_name;
        this.button_text = button_text;
        this.ad_privacy = ad_privacy;
        this.video_byte_size = video_byte_size;
        this.html_src = html_src;
        this.native_ad = native_ad;
        this.download_dialog = download_dialog;
        this.android_market = android_market;
        this.main_template = main_template;
        this.sub_template = sub_template;
        this.asset = Internal.immutableCopyOf("asset", asset);
        this.theme_data = theme_data;
        this.in_app = in_app;
        this.endcard_image_src = endcard_image_src;
        this.creative_title = creative_title;
        this.has_endcard = has_endcard;
        this.button_color = button_color;
        this.Widget_list = Internal.immutableCopyOf("Widget_list", Widget_list);
        this.apk_md5 = apk_md5;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.creative_type = creative_type;
        builder.interaction_type = interaction_type;
        builder.landing_page = landing_page;
        builder.video_url = video_url;
        builder.video_duration = video_duration;
        builder.video_size = video_size;
        builder.html_snippet = html_snippet;
        builder.endcard_url = endcard_url;
        builder.video_md5 = video_md5;
        builder.endcard_md5 = endcard_md5;
        builder.deeplink_url = deeplink_url;
        builder.image_src = image_src;
        builder.image_size = image_size;
        builder.image_md5 = image_md5;
        builder.image_type = image_type;
        builder.click_type = click_type;
        builder.has_companion_endcard = has_companion_endcard;
        builder.companion = companion;
        builder.web_event_handle = web_event_handle;
        builder.template_type = template_type;
        builder.video_reciprocal_millisecond = video_reciprocal_millisecond;
        builder.html_url = html_url;
        builder.enable_collapse_tool_bar = enable_collapse_tool_bar;
        builder.open_market_mode = open_market_mode;
        builder.play_mode = play_mode;
        builder.sub_interaction_type = sub_interaction_type;
        builder.title = title;
        builder.desc = desc;
        builder.icon_url = icon_url;
        builder.score = score;
        builder.template_id = template_id;
        builder.disable_auto_deeplink = disable_auto_deeplink;
        builder.closecard_html_snippet = closecard_html_snippet;
        builder.app_name = app_name;
        builder.button_text = button_text;
        builder.ad_privacy = ad_privacy;
        builder.video_byte_size = video_byte_size;
        builder.html_src = html_src;
        builder.native_ad = native_ad;
        builder.download_dialog = download_dialog;
        builder.android_market = android_market;
        builder.main_template = main_template;
        builder.sub_template = sub_template;
        builder.asset = Internal.copyOf("asset", asset);
        builder.theme_data = theme_data;
        builder.in_app = in_app;
        builder.endcard_image_src = endcard_image_src;
        builder.creative_title = creative_title;
        builder.has_endcard = has_endcard;
        builder.button_color = button_color;
        builder.Widget_list = Internal.copyOf("Widget_list", Widget_list);
        builder.apk_md5 = apk_md5;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof MaterialMeta)) return false;
        MaterialMeta o = (MaterialMeta) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(creative_type, o.creative_type)
                && Internal.equals(interaction_type, o.interaction_type)
                && Internal.equals(landing_page, o.landing_page)
                && Internal.equals(video_url, o.video_url)
                && Internal.equals(video_duration, o.video_duration)
                && Internal.equals(video_size, o.video_size)
                && Internal.equals(html_snippet, o.html_snippet)
                && Internal.equals(endcard_url, o.endcard_url)
                && Internal.equals(video_md5, o.video_md5)
                && Internal.equals(endcard_md5, o.endcard_md5)
                && Internal.equals(deeplink_url, o.deeplink_url)
                && Internal.equals(image_src, o.image_src)
                && Internal.equals(image_size, o.image_size)
                && Internal.equals(image_md5, o.image_md5)
                && Internal.equals(image_type, o.image_type)
                && Internal.equals(click_type, o.click_type)
                && Internal.equals(has_companion_endcard, o.has_companion_endcard)
                && Internal.equals(companion, o.companion)
                && Internal.equals(web_event_handle, o.web_event_handle)
                && Internal.equals(template_type, o.template_type)
                && Internal.equals(video_reciprocal_millisecond, o.video_reciprocal_millisecond)
                && Internal.equals(html_url, o.html_url)
                && Internal.equals(enable_collapse_tool_bar, o.enable_collapse_tool_bar)
                && Internal.equals(open_market_mode, o.open_market_mode)
                && Internal.equals(play_mode, o.play_mode)
                && Internal.equals(sub_interaction_type, o.sub_interaction_type)
                && Internal.equals(title, o.title)
                && Internal.equals(desc, o.desc)
                && Internal.equals(icon_url, o.icon_url)
                && Internal.equals(score, o.score)
                && Internal.equals(template_id, o.template_id)
                && Internal.equals(disable_auto_deeplink, o.disable_auto_deeplink)
                && Internal.equals(closecard_html_snippet, o.closecard_html_snippet)
                && Internal.equals(app_name, o.app_name)
                && Internal.equals(button_text, o.button_text)
                && Internal.equals(ad_privacy, o.ad_privacy)
                && Internal.equals(video_byte_size, o.video_byte_size)
                && Internal.equals(html_src, o.html_src)
                && Internal.equals(native_ad, o.native_ad)
                && Internal.equals(download_dialog, o.download_dialog)
                && Internal.equals(android_market, o.android_market)
                && Internal.equals(main_template, o.main_template)
                && Internal.equals(sub_template, o.sub_template)
                && asset.equals(o.asset)
                && Internal.equals(theme_data, o.theme_data)
                && Internal.equals(in_app, o.in_app)
                && Internal.equals(endcard_image_src, o.endcard_image_src)
                && Internal.equals(creative_title, o.creative_title)
                && Internal.equals(has_endcard, o.has_endcard)
                && Internal.equals(button_color, o.button_color)
                && Widget_list.equals(o.Widget_list)
                && Internal.equals(apk_md5, o.apk_md5);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (creative_type != null ? creative_type.hashCode() : 0);
            result = result * 37 + (interaction_type != null ? interaction_type.hashCode() : 0);
            result = result * 37 + (landing_page != null ? landing_page.hashCode() : 0);
            result = result * 37 + (video_url != null ? video_url.hashCode() : 0);
            result = result * 37 + (video_duration != null ? video_duration.hashCode() : 0);
            result = result * 37 + (video_size != null ? video_size.hashCode() : 0);
            result = result * 37 + (html_snippet != null ? html_snippet.hashCode() : 0);
            result = result * 37 + (endcard_url != null ? endcard_url.hashCode() : 0);
            result = result * 37 + (video_md5 != null ? video_md5.hashCode() : 0);
            result = result * 37 + (endcard_md5 != null ? endcard_md5.hashCode() : 0);
            result = result * 37 + (deeplink_url != null ? deeplink_url.hashCode() : 0);
            result = result * 37 + (image_src != null ? image_src.hashCode() : 0);
            result = result * 37 + (image_size != null ? image_size.hashCode() : 0);
            result = result * 37 + (image_md5 != null ? image_md5.hashCode() : 0);
            result = result * 37 + (image_type != null ? image_type.hashCode() : 0);
            result = result * 37 + (click_type != null ? click_type.hashCode() : 0);
            result = result * 37 + (has_companion_endcard != null ? has_companion_endcard.hashCode() : 0);
            result = result * 37 + (companion != null ? companion.hashCode() : 0);
            result = result * 37 + (web_event_handle != null ? web_event_handle.hashCode() : 0);
            result = result * 37 + (template_type != null ? template_type.hashCode() : 0);
            result = result * 37 + (video_reciprocal_millisecond != null ? video_reciprocal_millisecond.hashCode() : 0);
            result = result * 37 + (html_url != null ? html_url.hashCode() : 0);
            result = result * 37 + (enable_collapse_tool_bar != null ? enable_collapse_tool_bar.hashCode() : 0);
            result = result * 37 + (open_market_mode != null ? open_market_mode.hashCode() : 0);
            result = result * 37 + (play_mode != null ? play_mode.hashCode() : 0);
            result = result * 37 + (sub_interaction_type != null ? sub_interaction_type.hashCode() : 0);
            result = result * 37 + (title != null ? title.hashCode() : 0);
            result = result * 37 + (desc != null ? desc.hashCode() : 0);
            result = result * 37 + (icon_url != null ? icon_url.hashCode() : 0);
            result = result * 37 + (score != null ? score.hashCode() : 0);
            result = result * 37 + (template_id != null ? template_id.hashCode() : 0);
            result = result * 37 + (disable_auto_deeplink != null ? disable_auto_deeplink.hashCode() : 0);
            result = result * 37 + (closecard_html_snippet != null ? closecard_html_snippet.hashCode() : 0);
            result = result * 37 + (app_name != null ? app_name.hashCode() : 0);
            result = result * 37 + (button_text != null ? button_text.hashCode() : 0);
            result = result * 37 + (ad_privacy != null ? ad_privacy.hashCode() : 0);
            result = result * 37 + (video_byte_size != null ? video_byte_size.hashCode() : 0);
            result = result * 37 + (html_src != null ? html_src.hashCode() : 0);
            result = result * 37 + (native_ad != null ? native_ad.hashCode() : 0);
            result = result * 37 + (download_dialog != null ? download_dialog.hashCode() : 0);
            result = result * 37 + (android_market != null ? android_market.hashCode() : 0);
            result = result * 37 + (main_template != null ? main_template.hashCode() : 0);
            result = result * 37 + (sub_template != null ? sub_template.hashCode() : 0);
            result = result * 37 + asset.hashCode();
            result = result * 37 + (theme_data != null ? theme_data.hashCode() : 0);
            result = result * 37 + (in_app != null ? in_app.hashCode() : 0);
            result = result * 37 + (endcard_image_src != null ? endcard_image_src.hashCode() : 0);
            result = result * 37 + (creative_title != null ? creative_title.hashCode() : 0);
            result = result * 37 + (has_endcard != null ? has_endcard.hashCode() : 0);
            result = result * 37 + (button_color != null ? button_color.hashCode() : 0);
            result = result * 37 + Widget_list.hashCode();
            result = result * 37 + (apk_md5 != null ? apk_md5.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (creative_type != null) builder.append(", creative_type=").append(creative_type);
        if (interaction_type != null)
            builder.append(", interaction_type=").append(interaction_type);
        if (landing_page != null) builder.append(", landing_page=").append(landing_page);
        if (video_url != null) builder.append(", video_url=").append(video_url);
        if (video_duration != null) builder.append(", video_duration=").append(video_duration);
        if (video_size != null) builder.append(", video_size=").append(video_size);
        if (html_snippet != null) builder.append(", html_snippet=").append(html_snippet);
        if (endcard_url != null) builder.append(", endcard_url=").append(endcard_url);
        if (video_md5 != null) builder.append(", video_md5=").append(video_md5);
        if (endcard_md5 != null) builder.append(", endcard_md5=").append(endcard_md5);
        if (deeplink_url != null) builder.append(", deeplink_url=").append(deeplink_url);
        if (image_src != null) builder.append(", image_src=").append(image_src);
        if (image_size != null) builder.append(", image_size=").append(image_size);
        if (image_md5 != null) builder.append(", image_md5=").append(image_md5);
        if (image_type != null) builder.append(", image_type=").append(image_type);
        if (click_type != null) builder.append(", click_type=").append(click_type);
        if (has_companion_endcard != null)
            builder.append(", has_companion_endcard=").append(has_companion_endcard);
        if (companion != null) builder.append(", companion=").append(companion);
        if (web_event_handle != null)
            builder.append(", web_event_handle=").append(web_event_handle);
        if (template_type != null) builder.append(", template_type=").append(template_type);
        if (video_reciprocal_millisecond != null)
            builder.append(", video_reciprocal_millisecond=").append(video_reciprocal_millisecond);
        if (html_url != null) builder.append(", html_url=").append(html_url);
        if (enable_collapse_tool_bar != null)
            builder.append(", enable_collapse_tool_bar=").append(enable_collapse_tool_bar);
        if (open_market_mode != null)
            builder.append(", open_market_mode=").append(open_market_mode);
        if (play_mode != null) builder.append(", play_mode=").append(play_mode);
        if (sub_interaction_type != null)
            builder.append(", sub_interaction_type=").append(sub_interaction_type);
        if (title != null) builder.append(", title=").append(title);
        if (desc != null) builder.append(", desc=").append(desc);
        if (icon_url != null) builder.append(", icon_url=").append(icon_url);
        if (score != null) builder.append(", score=").append(score);
        if (template_id != null) builder.append(", template_id=").append(template_id);
        if (disable_auto_deeplink != null)
            builder.append(", disable_auto_deeplink=").append(disable_auto_deeplink);
        if (closecard_html_snippet != null)
            builder.append(", closecard_html_snippet=").append(closecard_html_snippet);
        if (app_name != null) builder.append(", app_name=").append(app_name);
        if (button_text != null) builder.append(", button_text=").append(button_text);
        if (ad_privacy != null) builder.append(", ad_privacy=").append(ad_privacy);
        if (video_byte_size != null) builder.append(", video_byte_size=").append(video_byte_size);
        if (html_src != null) builder.append(", html_src=").append(html_src);
        if (native_ad != null) builder.append(", native_ad=").append(native_ad);
        if (download_dialog != null) builder.append(", download_dialog=").append(download_dialog);
        if (android_market != null) builder.append(", android_market=").append(android_market);
        if (main_template != null) builder.append(", main_template=").append(main_template);
        if (sub_template != null) builder.append(", sub_template=").append(sub_template);
        if (!asset.isEmpty()) builder.append(", asset=").append(asset);
        if (theme_data != null) builder.append(", theme_data=").append(theme_data);
        if (in_app != null) builder.append(", in_app=").append(in_app);
        if (endcard_image_src != null)
            builder.append(", endcard_image_src=").append(endcard_image_src);
        if (creative_title != null) builder.append(", creative_title=").append(creative_title);
        if (has_endcard != null) builder.append(", has_endcard=").append(has_endcard);
        if (button_color != null) builder.append(", button_color=").append(button_color);
        if (!Widget_list.isEmpty()) builder.append(", Widget_list=").append(Widget_list);
        if (apk_md5 != null) builder.append(", apk_md5=").append(apk_md5);
        return builder.replace(0, 2, "MaterialMeta{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<MaterialMeta, Builder> {
        public Integer creative_type = DEFAULT_CREATIVE_TYPE;

        public Integer interaction_type = DEFAULT_INTERACTION_TYPE;

        public String landing_page = DEFAULT_LANDING_PAGE;

        public String video_url = DEFAULT_VIDEO_URL;

        public Integer video_duration = DEFAULT_VIDEO_DURATION;

        public Size video_size;

        public ByteString html_snippet = DEFAULT_HTML_SNIPPET;

        public String endcard_url = DEFAULT_ENDCARD_URL;

        public String video_md5 = DEFAULT_VIDEO_MD5;

        public String endcard_md5 = DEFAULT_ENDCARD_MD5;

        public String deeplink_url = DEFAULT_DEEPLINK_URL;

        public String image_src = DEFAULT_IMAGE_SRC;

        public Size image_size;

        public String image_md5 = DEFAULT_IMAGE_MD5;

        public Integer image_type = DEFAULT_IMAGE_TYPE;

        public Integer click_type = DEFAULT_CLICK_TYPE;

        public Boolean has_companion_endcard = DEFAULT_HAS_COMPANION_ENDCARD;

        public CompanionEndcard companion;

        public WebEventHandle web_event_handle;

        public Integer template_type = DEFAULT_TEMPLATE_TYPE;

        public Integer video_reciprocal_millisecond = DEFAULT_VIDEO_RECIPROCAL_MILLISECOND;

        public String html_url = DEFAULT_HTML_URL;

        public Boolean enable_collapse_tool_bar = DEFAULT_ENABLE_COLLAPSE_TOOL_BAR;

        public Integer open_market_mode = DEFAULT_OPEN_MARKET_MODE;

        public Integer play_mode = DEFAULT_PLAY_MODE;

        public Integer sub_interaction_type = DEFAULT_SUB_INTERACTION_TYPE;

        public String title = DEFAULT_TITLE;

        public String desc = DEFAULT_DESC;

        public String icon_url = DEFAULT_ICON_URL;

        public Float score = DEFAULT_SCORE;

        public Integer template_id = DEFAULT_TEMPLATE_ID;

        public Boolean disable_auto_deeplink = DEFAULT_DISABLE_AUTO_DEEPLINK;

        public ByteString closecard_html_snippet = DEFAULT_CLOSECARD_HTML_SNIPPET;

        public String app_name = DEFAULT_APP_NAME;

        public String button_text = DEFAULT_BUTTON_TEXT;

        public AdPrivacy ad_privacy;

        public Integer video_byte_size = DEFAULT_VIDEO_BYTE_SIZE;

        public String html_src = DEFAULT_HTML_SRC;

        public ResponseNativeAd native_ad;

        public Boolean download_dialog = DEFAULT_DOWNLOAD_DIALOG;

        public AndroidMarket android_market;

        public Template main_template;

        public Template sub_template;

        public List<ResponseAsset> asset;

        public Integer theme_data = DEFAULT_THEME_DATA;

        public Boolean in_app = DEFAULT_IN_APP;

        public String endcard_image_src = DEFAULT_ENDCARD_IMAGE_SRC;

        public String creative_title = DEFAULT_CREATIVE_TITLE;


        public Boolean has_endcard = DEFAULT_HAS_ENDCARD;

        public Color button_color;
        public List<Widget> Widget_list;

        public String apk_md5;

        public Builder() {
            asset = Internal.newMutableList();
            Widget_list = Internal.newMutableList();
        }

        /**
         * 创意类型：1=奖励视频广告的资源包形式(endcard为tgz包)，一般由video、endcard资源包构成；3=纯静态图片广告，一般由单张image_src构成;4=video+html源代码的模式;5=预留;6=video定帧+htmlsrc;7=video+landingpage(相当于在线endcard)；8单个视频；9 MRAID(The Mobile Rich Media Ad Interface Definitions system)
         */
        public Builder creative_type(Integer creative_type) {
            this.creative_type = creative_type;
            return this;
        }

        /**
         * 广告交互类型。1=使用浏览器打开；2=下载应用;3=deeplink唤醒失败，执行下载
         */
        public Builder interaction_type(Integer interaction_type) {
            this.interaction_type = interaction_type;
            return this;
        }

        /**
         * 广告目标地址
         */
        public Builder landing_page(String landing_page) {
            this.landing_page = landing_page;
            return this;
        }

        /**
         * 视频物料地址
         */
        public Builder video_url(String video_url) {
            this.video_url = video_url;
            return this;
        }

        /**
         * 视频物料时长
         */
        public Builder video_duration(Integer video_duration) {
            this.video_duration = video_duration;
            return this;
        }

        /**
         * 视频尺寸
         */
        public Builder video_size(Size video_size) {
            this.video_size = video_size;
            return this;
        }

        /**
         * HTML片段，中文需要UTF-8编码. 激励视频广告时,存放Endcard的H5代码.
         */
        public Builder html_snippet(ByteString html_snippet) {
            this.html_snippet = html_snippet;
            return this;
        }

        /**
         * Endcard地址，sigmob为资源包的方式
         */
        public Builder endcard_url(String endcard_url) {
            this.endcard_url = endcard_url;
            return this;
        }

        /**
         * 视频的md5
         */
        public Builder video_md5(String video_md5) {
            this.video_md5 = video_md5;
            return this;
        }

        /**
         * Endcard的md5
         */
        public Builder endcard_md5(String endcard_md5) {
            this.endcard_md5 = endcard_md5;
            return this;
        }

        /**
         * deeplink url
         */
        public Builder deeplink_url(String deeplink_url) {
            this.deeplink_url = deeplink_url;
            return this;
        }

        /**
         * 广告图片地址
         */
        public Builder image_src(String image_src) {
            this.image_src = image_src;
            return this;
        }

        /**
         * 广告图片尺寸
         */
        public Builder image_size(Size image_size) {
            this.image_size = image_size;
            return this;
        }

        /**
         * 图片的md5值
         */
        public Builder image_md5(String image_md5) {
            this.image_md5 = image_md5;
            return this;
        }

        /**
         * 图片素材的格式编码，0:unknown 1:jpeg,jpg 2:png 3:gif
         */
        public Builder image_type(Integer image_type) {
            this.image_type = image_type;
            return this;
        }

        /**
         * 点击类型，1=按钮点击，2=全屏点击
         */
        public Builder click_type(Integer click_type) {
            this.click_type = click_type;
            return this;
        }

        /**
         * 是否包含伴随广告的素材
         */
        public Builder has_companion_endcard(Boolean has_companion_endcard) {
            this.has_companion_endcard = has_companion_endcard;
            return this;
        }

        /**
         * 伴随广告的素材对象
         */
        public Builder companion(CompanionEndcard companion) {
            this.companion = companion;
            return this;
        }

        /**
         * html事件交互定义与sdk的事件交互对象
         */
        public Builder web_event_handle(WebEventHandle web_event_handle) {
            this.web_event_handle = web_event_handle;
            return this;
        }

        /**
         * 开屏:{1:跳过+广告合一+logo模版,2:跳过+广告模版}, 激励视频:{1:星级模版,2:描述模版}
         */
        public Builder template_type(Integer template_type) {
            this.template_type = template_type;
            return this;
        }

        /**
         * 视频播放结束后，停留的倒数（99999999:首帧；-99999999:尾帧；正数：正数第几毫秒；负数：倒数第几毫秒；0:取默认值）
         */
        public Builder video_reciprocal_millisecond(Integer video_reciprocal_millisecond) {
            this.video_reciprocal_millisecond = video_reciprocal_millisecond;
            return this;
        }

        /**
         * html素材地址(表单类投放可使用html_url+按钮点击+landing_page为空)
         */
        public Builder html_url(String html_url) {
            this.html_url = html_url;
            return this;
        }

        /**
         * 是否允许收起\展开工具条（通过单击视频)，false不允许，true允许
         */
        public Builder enable_collapse_tool_bar(Boolean enable_collapse_tool_bar) {
            this.enable_collapse_tool_bar = enable_collapse_tool_bar;
            return this;
        }

        /**
         * 打开应用市场的模式， 0:appstore半屏打开，1:全屏打开（目前仅ios使用）
         */
        public Builder open_market_mode(Integer open_market_mode) {
            this.open_market_mode = open_market_mode;
            return this;
        }

        /**
         * 播放模式，0:预加载模式，1:在线流媒体播放模式
         */
        public Builder play_mode(Integer play_mode) {
            this.play_mode = play_mode;
            return this;
        }

        /**
         * 子交互类型，0:无效, 1:广点通下载类型
         */
        public Builder sub_interaction_type(Integer sub_interaction_type) {
            this.sub_interaction_type = sub_interaction_type;
            return this;
        }

        /**
         * 广告标题(ssp v3.4.0开始加入)
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * 广告描述(ssp v3.4.0开始加入)
         */
        public Builder desc(String desc) {
            this.desc = desc;
            return this;
        }

        /**
         * 广告icon图片(ssp v3.4.0开始加入，未来CompanionEndcard中字段将废弃)
         */
        public Builder icon_url(String icon_url) {
            this.icon_url = icon_url;
            return this;
        }

        /**
         * 下载类app的星级，小数，例如4.5表示4星半（目前用在伴随广告），score大于等于1才有效(ssp v3.4.0开始加入，未来CompanionEndcard中字段将废弃)
         */
        public Builder score(Float score) {
            this.score = score;
            return this;
        }

        /**
         * 模板id
         */
        public Builder template_id(Integer template_id) {
            this.template_id = template_id;
            return this;
        }

        /**
         * 是否禁止deeplink自动唤起
         */
        public Builder disable_auto_deeplink(Boolean disable_auto_deeplink) {
            this.disable_auto_deeplink = disable_auto_deeplink;
            return this;
        }

        /**
         * 关闭页推荐HTML片段
         */
        public Builder closecard_html_snippet(ByteString closecard_html_snippet) {
            this.closecard_html_snippet = closecard_html_snippet;
            return this;
        }

        /**
         * 广告应用名称
         */
        public Builder app_name(String app_name) {
            this.app_name = app_name;
            return this;
        }

        /**
         * 广告按钮文案
         */
        public Builder button_text(String button_text) {
            this.button_text = button_text;
            return this;
        }

        /**
         * 广告隐私信息
         */
        public Builder ad_privacy(AdPrivacy ad_privacy) {
            this.ad_privacy = ad_privacy;
            return this;
        }

        /**
         * 视频大小，单位：字节
         */
        public Builder video_byte_size(Integer video_byte_size) {
            this.video_byte_size = video_byte_size;
            return this;
        }

        /**
         * html代码片段
         */
        public Builder html_src(String html_src) {
            this.html_src = html_src;
            return this;
        }

        /**
         * 原生广告
         */
        public Builder native_ad(ResponseNativeAd native_ad) {
            this.native_ad = native_ad;
            return this;
        }

        /**
         * 下载需要先弹四要素，默认false 下载不弹四要素，true为下载弹四要素弹框
         */
        public Builder download_dialog(Boolean download_dialog) {
            this.download_dialog = download_dialog;
            return this;
        }

        /**
         * 应用市场跳转
         */
        public Builder android_market(AndroidMarket android_market) {
            this.android_market = android_market;
            return this;
        }

        /**
         * 当前广告的主模版
         */
        public Builder main_template(Template main_template) {
            this.main_template = main_template;
            return this;
        }

        /**
         * 当前广告的字模版
         */
        public Builder sub_template(Template sub_template) {
            this.sub_template = sub_template;
            return this;
        }

        /**
         * 素材资源
         */
        public Builder asset(List<ResponseAsset> asset) {
            Internal.checkElementsNotNull(asset);
            this.asset = asset;
            return this;
        }

        /**
         * 0: 主题非半透明；1: 主题半透明
         */
        public Builder theme_data(Integer theme_data) {
            this.theme_data = theme_data;
            return this;
        }

        /**
         * 是否在应用内打开landing_page true:是
         */
        public Builder in_app(Boolean in_app) {
            this.in_app = in_app;
            return this;
        }

        /**
         * endcard图片（暂时用于插屏兜底原生模版）
         */
        public Builder endcard_image_src(String endcard_image_src) {
            this.endcard_image_src = endcard_image_src;
            return this;
        }

        /**
         * 创意标题
         */
        public Builder creative_title(String creative_title) {
            this.creative_title = creative_title;
            return this;
        }

        /**
         * 是否有endcard
         */
        public Builder has_endcard(Boolean has_endcard) {
            this.has_endcard = has_endcard;
            return this;
        }

        /**
         * 按钮颜色
         */
        public Builder button_color(Color button_color) {
            this.button_color = button_color;
            return this;
        }

        /**
         * 挂件列表
         */
        public Builder Widget_list(List<Widget> Widget_list) {
            Internal.checkElementsNotNull(Widget_list);
            this.Widget_list = Widget_list;
            return this;
        }

        /**
         * apk下载文件的md5值
         */
        public Builder apk_md5(String apk_md5) {
            this.apk_md5 = apk_md5;
            return this;
        }

        @Override
        public MaterialMeta build() {
            return new MaterialMeta(creative_type, interaction_type, landing_page, video_url, video_duration, video_size, html_snippet, endcard_url, video_md5, endcard_md5, deeplink_url, image_src, image_size, image_md5, image_type, click_type, has_companion_endcard, companion, web_event_handle, template_type, video_reciprocal_millisecond, html_url, enable_collapse_tool_bar, open_market_mode, play_mode, sub_interaction_type, title, desc, icon_url, score, template_id, disable_auto_deeplink, closecard_html_snippet, app_name, button_text, ad_privacy, video_byte_size, html_src, native_ad, download_dialog, android_market, main_template, sub_template, asset, theme_data, in_app, endcard_image_src, creative_title, has_endcard, button_color, Widget_list, apk_md5, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_MaterialMeta extends ProtoAdapter<MaterialMeta> {
        public ProtoAdapter_MaterialMeta() {
            super(FieldEncoding.LENGTH_DELIMITED, MaterialMeta.class);
        }

        @Override
        public int encodedSize(MaterialMeta value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.creative_type)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.interaction_type)
                    + ProtoAdapter.STRING.encodedSizeWithTag(3, value.landing_page)
                    + ProtoAdapter.STRING.encodedSizeWithTag(4, value.video_url)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.video_duration)
                    + Size.ADAPTER.encodedSizeWithTag(6, value.video_size)
                    + ProtoAdapter.BYTES.encodedSizeWithTag(7, value.html_snippet)
                    + ProtoAdapter.STRING.encodedSizeWithTag(8, value.endcard_url)
                    + ProtoAdapter.STRING.encodedSizeWithTag(9, value.video_md5)
                    + ProtoAdapter.STRING.encodedSizeWithTag(10, value.endcard_md5)
                    + ProtoAdapter.STRING.encodedSizeWithTag(11, value.deeplink_url)
                    + ProtoAdapter.STRING.encodedSizeWithTag(12, value.image_src)
                    + Size.ADAPTER.encodedSizeWithTag(13, value.image_size)
                    + ProtoAdapter.STRING.encodedSizeWithTag(14, value.image_md5)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(15, value.image_type)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(16, value.click_type)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(17, value.has_companion_endcard)
                    + CompanionEndcard.ADAPTER.encodedSizeWithTag(18, value.companion)
                    + WebEventHandle.ADAPTER.encodedSizeWithTag(19, value.web_event_handle)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(20, value.template_type)
                    + ProtoAdapter.INT32.encodedSizeWithTag(21, value.video_reciprocal_millisecond)
                    + ProtoAdapter.STRING.encodedSizeWithTag(22, value.html_url)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(23, value.enable_collapse_tool_bar)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(24, value.open_market_mode)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(25, value.play_mode)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(26, value.sub_interaction_type)
                    + ProtoAdapter.STRING.encodedSizeWithTag(27, value.title)
                    + ProtoAdapter.STRING.encodedSizeWithTag(28, value.desc)
                    + ProtoAdapter.STRING.encodedSizeWithTag(29, value.icon_url)
                    + ProtoAdapter.FLOAT.encodedSizeWithTag(30, value.score)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(31, value.template_id)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(32, value.disable_auto_deeplink)
                    + ProtoAdapter.BYTES.encodedSizeWithTag(33, value.closecard_html_snippet)
                    + ProtoAdapter.STRING.encodedSizeWithTag(34, value.app_name)
                    + ProtoAdapter.STRING.encodedSizeWithTag(35, value.button_text)
                    + AdPrivacy.ADAPTER.encodedSizeWithTag(36, value.ad_privacy)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(37, value.video_byte_size)
                    + ProtoAdapter.STRING.encodedSizeWithTag(38, value.html_src)
                    + ResponseNativeAd.ADAPTER.encodedSizeWithTag(39, value.native_ad)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(40, value.download_dialog)
                    + AndroidMarket.ADAPTER.encodedSizeWithTag(41, value.android_market)
                    + Template.ADAPTER.encodedSizeWithTag(42, value.main_template)
                    + Template.ADAPTER.encodedSizeWithTag(43, value.sub_template)
                    + ResponseAsset.ADAPTER.asRepeated().encodedSizeWithTag(44, value.asset)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(45, value.theme_data)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(46, value.in_app)
                    + ProtoAdapter.STRING.encodedSizeWithTag(47, value.endcard_image_src)
                    + ProtoAdapter.STRING.encodedSizeWithTag(48, value.creative_title)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(49, value.has_endcard)
                    + Color.ADAPTER.encodedSizeWithTag(50, value.button_color)
                    + Widget.ADAPTER.asRepeated().encodedSizeWithTag(51, value.Widget_list)
                    + ProtoAdapter.STRING.encodedSizeWithTag(52, value.apk_md5)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, MaterialMeta value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.creative_type);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.interaction_type);
            ProtoAdapter.STRING.encodeWithTag(writer, 3, value.landing_page);
            ProtoAdapter.STRING.encodeWithTag(writer, 4, value.video_url);
            ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.video_duration);
            Size.ADAPTER.encodeWithTag(writer, 6, value.video_size);
            ProtoAdapter.BYTES.encodeWithTag(writer, 7, value.html_snippet);
            ProtoAdapter.STRING.encodeWithTag(writer, 8, value.endcard_url);
            ProtoAdapter.STRING.encodeWithTag(writer, 9, value.video_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 10, value.endcard_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 11, value.deeplink_url);
            ProtoAdapter.STRING.encodeWithTag(writer, 12, value.image_src);
            Size.ADAPTER.encodeWithTag(writer, 13, value.image_size);
            ProtoAdapter.STRING.encodeWithTag(writer, 14, value.image_md5);
            ProtoAdapter.UINT32.encodeWithTag(writer, 15, value.image_type);
            ProtoAdapter.UINT32.encodeWithTag(writer, 16, value.click_type);
            ProtoAdapter.BOOL.encodeWithTag(writer, 17, value.has_companion_endcard);
            CompanionEndcard.ADAPTER.encodeWithTag(writer, 18, value.companion);
            WebEventHandle.ADAPTER.encodeWithTag(writer, 19, value.web_event_handle);
            ProtoAdapter.UINT32.encodeWithTag(writer, 20, value.template_type);
            ProtoAdapter.INT32.encodeWithTag(writer, 21, value.video_reciprocal_millisecond);
            ProtoAdapter.STRING.encodeWithTag(writer, 22, value.html_url);
            ProtoAdapter.BOOL.encodeWithTag(writer, 23, value.enable_collapse_tool_bar);
            ProtoAdapter.UINT32.encodeWithTag(writer, 24, value.open_market_mode);
            ProtoAdapter.UINT32.encodeWithTag(writer, 25, value.play_mode);
            ProtoAdapter.UINT32.encodeWithTag(writer, 26, value.sub_interaction_type);
            ProtoAdapter.STRING.encodeWithTag(writer, 27, value.title);
            ProtoAdapter.STRING.encodeWithTag(writer, 28, value.desc);
            ProtoAdapter.STRING.encodeWithTag(writer, 29, value.icon_url);
            ProtoAdapter.FLOAT.encodeWithTag(writer, 30, value.score);
            ProtoAdapter.UINT32.encodeWithTag(writer, 31, value.template_id);
            ProtoAdapter.BOOL.encodeWithTag(writer, 32, value.disable_auto_deeplink);
            ProtoAdapter.BYTES.encodeWithTag(writer, 33, value.closecard_html_snippet);
            ProtoAdapter.STRING.encodeWithTag(writer, 34, value.app_name);
            ProtoAdapter.STRING.encodeWithTag(writer, 35, value.button_text);
            AdPrivacy.ADAPTER.encodeWithTag(writer, 36, value.ad_privacy);
            ProtoAdapter.UINT32.encodeWithTag(writer, 37, value.video_byte_size);
            ProtoAdapter.STRING.encodeWithTag(writer, 38, value.html_src);
            ResponseNativeAd.ADAPTER.encodeWithTag(writer, 39, value.native_ad);
            ProtoAdapter.BOOL.encodeWithTag(writer, 40, value.download_dialog);
            AndroidMarket.ADAPTER.encodeWithTag(writer, 41, value.android_market);
            Template.ADAPTER.encodeWithTag(writer, 42, value.main_template);
            Template.ADAPTER.encodeWithTag(writer, 43, value.sub_template);
            ResponseAsset.ADAPTER.asRepeated().encodeWithTag(writer, 44, value.asset);
            ProtoAdapter.UINT32.encodeWithTag(writer, 45, value.theme_data);
            ProtoAdapter.BOOL.encodeWithTag(writer, 46, value.in_app);
            ProtoAdapter.STRING.encodeWithTag(writer, 47, value.endcard_image_src);
            ProtoAdapter.STRING.encodeWithTag(writer, 48, value.creative_title);
            ProtoAdapter.BOOL.encodeWithTag(writer, 49, value.has_endcard);
            Color.ADAPTER.encodeWithTag(writer, 50, value.button_color);
            Widget.ADAPTER.asRepeated().encodeWithTag(writer, 51, value.Widget_list);
            ProtoAdapter.STRING.encodeWithTag(writer, 52, value.apk_md5);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public MaterialMeta decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.creative_type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.interaction_type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 3:
                        builder.landing_page(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 4:
                        builder.video_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 5:
                        builder.video_duration(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 6:
                        builder.video_size(Size.ADAPTER.decode(reader));
                        break;
                    case 7:
                        builder.html_snippet(ProtoAdapter.BYTES.decode(reader));
                        break;
                    case 8:
                        builder.endcard_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 9:
                        builder.video_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 10:
                        builder.endcard_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 11:
                        builder.deeplink_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 12:
                        builder.image_src(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 13:
                        builder.image_size(Size.ADAPTER.decode(reader));
                        break;
                    case 14:
                        builder.image_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 15:
                        builder.image_type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 16:
                        builder.click_type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 17:
                        builder.has_companion_endcard(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 18:
                        builder.companion(CompanionEndcard.ADAPTER.decode(reader));
                        break;
                    case 19:
                        builder.web_event_handle(WebEventHandle.ADAPTER.decode(reader));
                        break;
                    case 20:
                        builder.template_type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 21:
                        builder.video_reciprocal_millisecond(ProtoAdapter.INT32.decode(reader));
                        break;
                    case 22:
                        builder.html_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 23:
                        builder.enable_collapse_tool_bar(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 24:
                        builder.open_market_mode(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 25:
                        builder.play_mode(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 26:
                        builder.sub_interaction_type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 27:
                        builder.title(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 28:
                        builder.desc(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 29:
                        builder.icon_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 30:
                        builder.score(ProtoAdapter.FLOAT.decode(reader));
                        break;
                    case 31:
                        builder.template_id(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 32:
                        builder.disable_auto_deeplink(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 33:
                        builder.closecard_html_snippet(ProtoAdapter.BYTES.decode(reader));
                        break;
                    case 34:
                        builder.app_name(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 35:
                        builder.button_text(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 36:
                        builder.ad_privacy(AdPrivacy.ADAPTER.decode(reader));
                        break;
                    case 37:
                        builder.video_byte_size(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 38:
                        builder.html_src(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 39:
                        builder.native_ad(ResponseNativeAd.ADAPTER.decode(reader));
                        break;
                    case 40:
                        builder.download_dialog(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 41:
                        builder.android_market(AndroidMarket.ADAPTER.decode(reader));
                        break;
                    case 42:
                        builder.main_template(Template.ADAPTER.decode(reader));
                        break;
                    case 43:
                        builder.sub_template(Template.ADAPTER.decode(reader));
                        break;
                    case 44:
                        builder.asset.add(ResponseAsset.ADAPTER.decode(reader));
                        break;
                    case 45:
                        builder.theme_data(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 46:
                        builder.in_app(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 47:
                        builder.endcard_image_src(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 48:
                        builder.creative_title(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 49:
                        builder.has_endcard(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 50:
                        builder.button_color(Color.ADAPTER.decode(reader));
                        break;
                    case 51:
                        builder.Widget_list.add(Widget.ADAPTER.decode(reader));
                        break;
                    case 52:
                        builder.apk_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public MaterialMeta redact(MaterialMeta value) {
            Builder builder = value.newBuilder();
            if (builder.video_size != null)
                builder.video_size = Size.ADAPTER.redact(builder.video_size);
            if (builder.image_size != null)
                builder.image_size = Size.ADAPTER.redact(builder.image_size);
            if (builder.companion != null)
                builder.companion = CompanionEndcard.ADAPTER.redact(builder.companion);
            if (builder.web_event_handle != null)
                builder.web_event_handle = WebEventHandle.ADAPTER.redact(builder.web_event_handle);
            if (builder.ad_privacy != null)
                builder.ad_privacy = AdPrivacy.ADAPTER.redact(builder.ad_privacy);
            if (builder.native_ad != null)
                builder.native_ad = ResponseNativeAd.ADAPTER.redact(builder.native_ad);
            if (builder.android_market != null)
                builder.android_market = AndroidMarket.ADAPTER.redact(builder.android_market);
            if (builder.main_template != null)
                builder.main_template = Template.ADAPTER.redact(builder.main_template);
            if (builder.sub_template != null)
                builder.sub_template = Template.ADAPTER.redact(builder.sub_template);
            Internal.redactElements(builder.asset, ResponseAsset.ADAPTER);
            if (builder.button_color != null)
                builder.button_color = Color.ADAPTER.redact(builder.button_color);
            Internal.redactElements(builder.Widget_list, Widget.ADAPTER);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
