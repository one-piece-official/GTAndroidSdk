// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_response.proto
package com.sigmob.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class BiddingResponse extends AndroidMessage<BiddingResponse, BiddingResponse.Builder> {
    public static final ProtoAdapter<BiddingResponse> ADAPTER = new ProtoAdapter_BiddingResponse();

    public static final Parcelable.Creator<BiddingResponse> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_WIN_URL = "";

    public static final String DEFAULT_LOSE_URL = "";

    public static final Integer DEFAULT_ECPM = 0;

    /**
     * 竞价成功url
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String win_url;

    /**
     * 竞价失败url
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String lose_url;

    /**
     * 出价
     */
    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer ecpm;

    public BiddingResponse(String win_url, String lose_url, Integer ecpm) {
        this(win_url, lose_url, ecpm, ByteString.EMPTY);
    }

    public BiddingResponse(String win_url, String lose_url, Integer ecpm, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.win_url = win_url;
        this.lose_url = lose_url;
        this.ecpm = ecpm;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.win_url = win_url;
        builder.lose_url = lose_url;
        builder.ecpm = ecpm;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof BiddingResponse)) return false;
        BiddingResponse o = (BiddingResponse) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(win_url, o.win_url)
                && Internal.equals(lose_url, o.lose_url)
                && Internal.equals(ecpm, o.ecpm);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (win_url != null ? win_url.hashCode() : 0);
            result = result * 37 + (lose_url != null ? lose_url.hashCode() : 0);
            result = result * 37 + (ecpm != null ? ecpm.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (win_url != null) builder.append(", win_url=").append(win_url);
        if (lose_url != null) builder.append(", lose_url=").append(lose_url);
        if (ecpm != null) builder.append(", ecpm=").append(ecpm);
        return builder.replace(0, 2, "BiddingResponse{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<BiddingResponse, Builder> {
        public String win_url = DEFAULT_WIN_URL;

        public String lose_url = DEFAULT_LOSE_URL;

        public Integer ecpm = DEFAULT_ECPM;

        public Builder() {
        }

        /**
         * 竞价成功url
         */
        public Builder win_url(String win_url) {
            this.win_url = win_url;
            return this;
        }

        /**
         * 竞价失败url
         */
        public Builder lose_url(String lose_url) {
            this.lose_url = lose_url;
            return this;
        }

        /**
         * 出价
         */
        public Builder ecpm(Integer ecpm) {
            this.ecpm = ecpm;
            return this;
        }

        @Override
        public BiddingResponse build() {
            return new BiddingResponse(win_url, lose_url, ecpm, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_BiddingResponse extends ProtoAdapter<BiddingResponse> {
        public ProtoAdapter_BiddingResponse() {
            super(FieldEncoding.LENGTH_DELIMITED, BiddingResponse.class);
        }

        @Override
        public int encodedSize(BiddingResponse value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.win_url)
                    + ProtoAdapter.STRING.encodedSizeWithTag(2, value.lose_url)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.ecpm)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, BiddingResponse value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.win_url);
            ProtoAdapter.STRING.encodeWithTag(writer, 2, value.lose_url);
            ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.ecpm);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public BiddingResponse decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.win_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.lose_url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 3:
                        builder.ecpm(ProtoAdapter.UINT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public BiddingResponse redact(BiddingResponse value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
