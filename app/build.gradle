plugins {
    id 'com.android.application'
}

def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute([], project.rootDir).text.trim().toInteger()
}

def mVersionCode = 100
def mVersionName = "1.0.0"

if (project.hasProperty("buildVersion")) mVersionName = "${project.buildVersion}"

android {

    signingConfigs {
        sign {
            keyAlias 'key'
            keyPassword 'fengyun'
            storeFile file('../key/signKey')
            storePassword 'fengyun'
        }
    }

    compileSdkVersion 33

    defaultConfig {
        applicationId "com.windmill.demo.android"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode mVersionCode
        versionName mVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64', 'armeabi'
        }

        packagingOptions {
            doNotStrip "*/armeabi-v7a/*.so"
            doNotStrip "*/x86/*.so"
            doNotStrip "*/arm64-v8a/*.so"
            doNotStrip "*/x86_64/*.so"
            doNotStrip "armeabi.so"
        }

        multiDexEnabled true
    }

    useLibrary 'org.apache.http.legacy'

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {

        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

configurations.all {
//    // 每隔24小时检查远程依赖是否存在更新，针对xxx:xxx:1.1之类的静态版本
//    resolutionStrategy.cacheChangingModulesFor 24, 'hours'
    //每隔10分钟..
    resolutionStrategy.cacheChangingModulesFor 0, 'minutes'
    // 采用动态版本声明的依赖缓存10分钟，针对xxx:xxx:1.1.+之类的动态版本
    // resolutionStrategy.cacheDynamicVersionsFor 10*60, 'seconds'
}


dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.google.android.material:material:1.6.1'//billowlink需要

    implementation fileTree(include: ["oaid_sdk_*.aar"], dir: 'libs')
    implementation fileTree(include: ["Wind-Consent.aar"], dir: 'libs')

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // 广告助手
//    implementation 'com.qq.e.union:tools:+'
//    implementation "com.google.android.material:material:1.0.0"

    implementation 'com.tencent.mm.opensdk:wechat-sdk-android:+'

    implementation project(':sigmob-sdk')

    implementation project(':common')
    implementation project(':wire')
    implementation project(':volley')
    implementation project(':logger')
    implementation project(':deviceHelper')
    implementation project(':lib-aar-local')

    implementation 'com.tencent.mm.opensdk:wechat-sdk-android:+'

}

task copyAAR {
    doLast {
//        delete "../Core/"
        copy {
            from "../windmill-sdk/build/outputs/aar"
            include "windmill-sdk-release.aar"
            into '../Core/'
            rename "windmill-sdk-release.aar", "windmill-sdk-" + mVersionName + ".aar"
        }
//        copy {
//            from "../Core/"
//            into '../WindMillAd/app/libs'
//            include "*.aar"
//        }
    }
}

task buildZip(type: Zip) {
    from '../'
//    exclude 'WindMillAd/.gradle'
//    exclude 'WindMillAd/.idea'
//    include 'WindMillAd/'
    include 'Core/'
    include 'xml/'
    include 'ReadMe/'
    include 'Configs/'

    destinationDir file('../OutZip/')
    baseName 'tobid'
    appendix 'android-cn'
    version mVersionName
    extension 'zip'
}

task buildOthersZip(type: Zip) {
    from '../'
//    exclude 'WindMillAd/.gradle'
//    exclude 'WindMillAd/.idea'
//    include 'WindMillAd/'
    include 'Core/'
    include 'xml/'
    include 'AdNetworks-gp/'
//    include 'adapterLibs-gp/'
    include 'mediation.gradle'
    include 'ReadMe/'
    include 'Configs/'

    destinationDir file('../OutZip/')
    baseName 'tobid'
    appendix 'mediation-android-gp'
    version mVersionName
    extension 'zip'
}

task buildOthersCNZip(type: Zip) {
    from '../'
//    exclude 'WindMillAd/.gradle'
//    exclude 'WindMillAd/.idea'
//    include 'WindMillAd/'
    include 'Core/'
    include 'xml/'
    include 'AdNetworks/'
//    include 'adapterLibs/'
    include 'ReadMe/'
    include 'Configs/'

    destinationDir file('../OutZip/')
    baseName 'tobid'
    appendix 'mediation-android-cn'
    version mVersionName
    extension 'zip'
}
