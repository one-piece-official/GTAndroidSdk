// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: gt_ssp_config.proto
package com.gt.sdk.base.models.config;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class Android extends AndroidMessage<Android, Android.Builder> {

    public static final ProtoAdapter<Android> ADAPTER = new ProtoAdapter_Android();

    public static final Parcelable.Creator<Android> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Boolean DEFAULT_DISABLEUPAPPINFO = false;

    public static final Integer DEFAULT_REPORT_LOG = 0;

    public static final Integer DEFAULT_UP_WIFI_LIST_INTERVAL = 0;

    public static final Integer DEFAULT_DISABLE_UP_OAID = 0;

    public static final Boolean DEFAULT_ENABLE_PERMISSION = false;

    public static final Integer DEFAULT_APK_EXPIRED_TIME = 0;

    public static final Boolean DEFAULT_ENABLE_REPORT_CRASH = false;

    public static final Boolean DEFAULT_OAID_API_IS_DISABLE = false;

    public static final Boolean DEFAULT_DISABLE_BOOT_MARK = false;

    /**
     * 是否禁止上传用户已安装的app信息，默认是false，即可以上传
     */
    @WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean disableUpAppInfo;

    /**
     * 是否要写log,控制最细颗粒度为设备 0:关、1:开
     */
    @WireField(tag = 2, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer report_log;

    /**
     * 上传wiki列表的时间间隔，单位秒，小于60秒则表示不上传
     */
    @WireField(tag = 3, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer up_wifi_list_interval;

    /**
     * 是否禁止获取oaid信息，其中在android10一下默认为不上传，Android10以上默认上传；1: 不禁止上传；2: 禁止上传; 其它走默认值
     */
    @WireField(tag = 4, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer disable_up_oaid;

    /**
     * 允许获取权限的开关；默认为false: 表示不获取权限列表
     */
    @WireField(tag = 5, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean enable_permission;

    /**
     * 下载的apk的过期时间，单位：s; 默认0: 表示永远过期
     */
    @WireField(tag = 6, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer apk_expired_time;

    /**
     * 允许获取崩溃信息的开关；默认为false: 表示不上报崩溃信息
     */
    @WireField(tag = 7, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean enable_report_crash;

    /**
     * 默认值 false :允许通过API模式采集oaid, true: 禁止通过API模式采集oaid，
     */
    @WireField(tag = 8, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean oaid_api_is_disable;

    /**
     * 禁止 boot_mark, update_mark 获取,default=false
     */
    @WireField(tag = 9, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean disable_boot_mark;

    public Android(Boolean disableUpAppInfo, Integer report_log, Integer up_wifi_list_interval, Integer disable_up_oaid, Boolean enable_permission, Integer apk_expired_time, Boolean enable_report_crash, Boolean oaid_api_is_disable, Boolean disable_boot_mark) {
        this(disableUpAppInfo, report_log, up_wifi_list_interval, disable_up_oaid, enable_permission, apk_expired_time, enable_report_crash, oaid_api_is_disable, disable_boot_mark, ByteString.EMPTY);
    }

    public Android(Boolean disableUpAppInfo, Integer report_log, Integer up_wifi_list_interval, Integer disable_up_oaid, Boolean enable_permission, Integer apk_expired_time, Boolean enable_report_crash, Boolean oaid_api_is_disable, Boolean disable_boot_mark, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.disableUpAppInfo = disableUpAppInfo;
        this.report_log = report_log;
        this.up_wifi_list_interval = up_wifi_list_interval;
        this.disable_up_oaid = disable_up_oaid;
        this.enable_permission = enable_permission;
        this.apk_expired_time = apk_expired_time;
        this.enable_report_crash = enable_report_crash;
        this.oaid_api_is_disable = oaid_api_is_disable;
        this.disable_boot_mark = disable_boot_mark;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.disableUpAppInfo = disableUpAppInfo;
        builder.report_log = report_log;
        builder.up_wifi_list_interval = up_wifi_list_interval;
        builder.disable_up_oaid = disable_up_oaid;
        builder.enable_permission = enable_permission;
        builder.apk_expired_time = apk_expired_time;
        builder.enable_report_crash = enable_report_crash;
        builder.oaid_api_is_disable = oaid_api_is_disable;
        builder.disable_boot_mark = disable_boot_mark;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Android)) return false;
        Android o = (Android) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(disableUpAppInfo, o.disableUpAppInfo) && Internal.equals(report_log, o.report_log) && Internal.equals(up_wifi_list_interval, o.up_wifi_list_interval) && Internal.equals(disable_up_oaid, o.disable_up_oaid) && Internal.equals(enable_permission, o.enable_permission) && Internal.equals(apk_expired_time, o.apk_expired_time) && Internal.equals(enable_report_crash, o.enable_report_crash) && Internal.equals(oaid_api_is_disable, o.oaid_api_is_disable) && Internal.equals(disable_boot_mark, o.disable_boot_mark);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (disableUpAppInfo != null ? disableUpAppInfo.hashCode() : 0);
            result = result * 37 + (report_log != null ? report_log.hashCode() : 0);
            result = result * 37 + (up_wifi_list_interval != null ? up_wifi_list_interval.hashCode() : 0);
            result = result * 37 + (disable_up_oaid != null ? disable_up_oaid.hashCode() : 0);
            result = result * 37 + (enable_permission != null ? enable_permission.hashCode() : 0);
            result = result * 37 + (apk_expired_time != null ? apk_expired_time.hashCode() : 0);
            result = result * 37 + (enable_report_crash != null ? enable_report_crash.hashCode() : 0);
            result = result * 37 + (oaid_api_is_disable != null ? oaid_api_is_disable.hashCode() : 0);
            result = result * 37 + (disable_boot_mark != null ? disable_boot_mark.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (disableUpAppInfo != null)
            builder.append(", disableUpAppInfo=").append(disableUpAppInfo);
        if (report_log != null) builder.append(", report_log=").append(report_log);
        if (up_wifi_list_interval != null)
            builder.append(", up_wifi_list_interval=").append(up_wifi_list_interval);
        if (disable_up_oaid != null) builder.append(", disable_up_oaid=").append(disable_up_oaid);
        if (enable_permission != null)
            builder.append(", enable_permission=").append(enable_permission);
        if (apk_expired_time != null)
            builder.append(", apk_expired_time=").append(apk_expired_time);
        if (enable_report_crash != null)
            builder.append(", enable_report_crash=").append(enable_report_crash);
        if (oaid_api_is_disable != null)
            builder.append(", oaid_api_is_disable=").append(oaid_api_is_disable);
        if (disable_boot_mark != null)
            builder.append(", disable_boot_mark=").append(disable_boot_mark);
        return builder.replace(0, 2, "Android{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Android, Builder> {
        public Boolean disableUpAppInfo = DEFAULT_DISABLEUPAPPINFO;

        public Integer report_log = DEFAULT_REPORT_LOG;

        public Integer up_wifi_list_interval = DEFAULT_UP_WIFI_LIST_INTERVAL;

        public Integer disable_up_oaid = DEFAULT_DISABLE_UP_OAID;

        public Boolean enable_permission = DEFAULT_ENABLE_PERMISSION;

        public Integer apk_expired_time = DEFAULT_APK_EXPIRED_TIME;

        public Boolean enable_report_crash = DEFAULT_ENABLE_REPORT_CRASH;

        public Boolean oaid_api_is_disable = DEFAULT_OAID_API_IS_DISABLE;

        public Boolean disable_boot_mark = DEFAULT_DISABLE_BOOT_MARK;

        public Builder() {
        }

        /**
         * 是否禁止上传用户已安装的app信息，默认是false，即可以上传
         */
        public Builder disableUpAppInfo(Boolean disableUpAppInfo) {
            this.disableUpAppInfo = disableUpAppInfo;
            return this;
        }

        /**
         * 是否要写log,控制最细颗粒度为设备 0:关、1:开
         */
        public Builder report_log(Integer report_log) {
            this.report_log = report_log;
            return this;
        }

        /**
         * 上传wiki列表的时间间隔，单位秒，小于60秒则表示不上传
         */
        public Builder up_wifi_list_interval(Integer up_wifi_list_interval) {
            this.up_wifi_list_interval = up_wifi_list_interval;
            return this;
        }

        /**
         * 是否禁止获取oaid信息，其中在android10一下默认为不上传，Android10以上默认上传；1: 不禁止上传；2: 禁止上传; 其它走默认值
         */
        public Builder disable_up_oaid(Integer disable_up_oaid) {
            this.disable_up_oaid = disable_up_oaid;
            return this;
        }

        /**
         * 允许获取权限的开关；默认为false: 表示不获取权限列表
         */
        public Builder enable_permission(Boolean enable_permission) {
            this.enable_permission = enable_permission;
            return this;
        }

        /**
         * 下载的apk的过期时间，单位：s; 默认0: 表示永远过期
         */
        public Builder apk_expired_time(Integer apk_expired_time) {
            this.apk_expired_time = apk_expired_time;
            return this;
        }

        /**
         * 允许获取崩溃信息的开关；默认为false: 表示不上报崩溃信息
         */
        public Builder enable_report_crash(Boolean enable_report_crash) {
            this.enable_report_crash = enable_report_crash;
            return this;
        }

        /**
         * 默认值 false :允许通过API模式采集oaid, true: 禁止通过API模式采集oaid，
         */
        public Builder oaid_api_is_disable(Boolean oaid_api_is_disable) {
            this.oaid_api_is_disable = oaid_api_is_disable;
            return this;
        }

        /**
         * 禁止 boot_mark, update_mark 获取,default=false
         */
        public Builder disable_boot_mark(Boolean disable_boot_mark) {
            this.disable_boot_mark = disable_boot_mark;
            return this;
        }

        @Override
        public Android build() {
            return new Android(disableUpAppInfo, report_log, up_wifi_list_interval, disable_up_oaid, enable_permission, apk_expired_time, enable_report_crash, oaid_api_is_disable, disable_boot_mark, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Android extends ProtoAdapter<Android> {
        public ProtoAdapter_Android() {
            super(FieldEncoding.LENGTH_DELIMITED, Android.class);
        }

        @Override
        public int encodedSize(Android value) {
            return ProtoAdapter.BOOL.encodedSizeWithTag(1, value.disableUpAppInfo) + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.report_log) + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.up_wifi_list_interval) + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.disable_up_oaid) + ProtoAdapter.BOOL.encodedSizeWithTag(5, value.enable_permission) + ProtoAdapter.UINT32.encodedSizeWithTag(6, value.apk_expired_time) + ProtoAdapter.BOOL.encodedSizeWithTag(7, value.enable_report_crash) + ProtoAdapter.BOOL.encodedSizeWithTag(8, value.oaid_api_is_disable) + ProtoAdapter.BOOL.encodedSizeWithTag(9, value.disable_boot_mark) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Android value) throws IOException {
            ProtoAdapter.BOOL.encodeWithTag(writer, 1, value.disableUpAppInfo);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.report_log);
            ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.up_wifi_list_interval);
            ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.disable_up_oaid);
            ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.enable_permission);
            ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.apk_expired_time);
            ProtoAdapter.BOOL.encodeWithTag(writer, 7, value.enable_report_crash);
            ProtoAdapter.BOOL.encodeWithTag(writer, 8, value.oaid_api_is_disable);
            ProtoAdapter.BOOL.encodeWithTag(writer, 9, value.disable_boot_mark);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Android decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.disableUpAppInfo(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 2:
                        builder.report_log(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 3:
                        builder.up_wifi_list_interval(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 4:
                        builder.disable_up_oaid(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 5:
                        builder.enable_permission(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 6:
                        builder.apk_expired_time(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 7:
                        builder.enable_report_crash(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 8:
                        builder.oaid_api_is_disable(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 9:
                        builder.disable_boot_mark(ProtoAdapter.BOOL.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Android redact(Android value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
