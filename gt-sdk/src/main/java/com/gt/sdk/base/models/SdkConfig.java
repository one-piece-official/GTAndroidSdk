// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: gt_ssp_config.proto
package com.gt.sdk.base.models;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;


/**
 * 配置信息
 */
public final class SdkConfig extends AndroidMessage<SdkConfig, SdkConfig.Builder> {

    public static final ProtoAdapter<SdkConfig> ADAPTER = new ProtoAdapter_SdkConfig();

    public static final Parcelable.Creator<SdkConfig> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    @WireField(tag = 1, adapter = "com.gt.sdk.base.models.Common#ADAPTER")
    public final Common common_config;

    @WireField(tag = 3, adapter = "com.gt.sdk.base.models.Android#ADAPTER")
    public final Android android_config;

    public SdkConfig(Common common_config, Android android_config) {
        this(common_config, android_config, ByteString.EMPTY);
    }

    public SdkConfig(Common common_config, Android android_config, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.common_config = common_config;
        this.android_config = android_config;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.common_config = common_config;
        builder.android_config = android_config;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof SdkConfig)) return false;
        SdkConfig o = (SdkConfig) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(common_config, o.common_config) && Internal.equals(android_config, o.android_config);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (common_config != null ? common_config.hashCode() : 0);
            result = result * 37 + (android_config != null ? android_config.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (common_config != null) builder.append(", common_config=").append(common_config);
        if (android_config != null) builder.append(", android_config=").append(android_config);
        return builder.replace(0, 2, "SdkConfig{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<SdkConfig, Builder> {
        public Common common_config;

        public Android android_config;

        public Builder() {
        }

        public Builder common_config(Common common_config) {
            this.common_config = common_config;
            return this;
        }

        public Builder android_config(Android android_config) {
            this.android_config = android_config;
            return this;
        }

        @Override
        public SdkConfig build() {
            return new SdkConfig(common_config, android_config, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_SdkConfig extends ProtoAdapter<SdkConfig> {
        public ProtoAdapter_SdkConfig() {
            super(FieldEncoding.LENGTH_DELIMITED, SdkConfig.class);
        }

        @Override
        public int encodedSize(SdkConfig value) {
            return Common.ADAPTER.encodedSizeWithTag(1, value.common_config) + Android.ADAPTER.encodedSizeWithTag(3, value.android_config) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, SdkConfig value) throws IOException {
            Common.ADAPTER.encodeWithTag(writer, 1, value.common_config);
            Android.ADAPTER.encodeWithTag(writer, 3, value.android_config);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public SdkConfig decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.common_config(Common.ADAPTER.decode(reader));
                        break;
                    case 3:
                        builder.android_config(Android.ADAPTER.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public SdkConfig redact(SdkConfig value) {
            Builder builder = value.newBuilder();
            if (builder.common_config != null)
                builder.common_config = Common.ADAPTER.redact(builder.common_config);
            if (builder.android_config != null)
                builder.android_config = Android.ADAPTER.redact(builder.android_config);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
