// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: gt_ad_response.proto
package com.gt.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;


public final class SeatBid extends AndroidMessage<SeatBid, SeatBid.Builder> {
    public static final ProtoAdapter<SeatBid> ADAPTER = new ProtoAdapter_SeatBid();

    public static final Parcelable.Creator<SeatBid> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    /**
     * 对应 imp 的 bid 信息，查看 Bid 对象
     */
    @WireField(tag = 1, adapter = "com.gt.sdk.base.models.rtb.Bid#ADAPTER", label = WireField.Label.REPEATED)
    public final List<Bid> bid;

    public SeatBid(List<Bid> bid) {
        this(bid, ByteString.EMPTY);
    }

    public SeatBid(List<Bid> bid, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.bid = Internal.immutableCopyOf("bid", bid);
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.bid = Internal.copyOf("bid", bid);
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof SeatBid)) return false;
        SeatBid o = (SeatBid) other;
        return unknownFields().equals(o.unknownFields()) && bid.equals(o.bid);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + bid.hashCode();
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (!bid.isEmpty()) builder.append(", bid=").append(bid);
        return builder.replace(0, 2, "SeatBid{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<SeatBid, Builder> {
        public List<Bid> bid;

        public Builder() {
            bid = Internal.newMutableList();
        }

        /**
         * 对应 imp 的 bid 信息，查看 Bid 对象
         */
        public Builder bid(List<Bid> bid) {
            Internal.checkElementsNotNull(bid);
            this.bid = bid;
            return this;
        }

        @Override
        public SeatBid build() {
            return new SeatBid(bid, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_SeatBid extends ProtoAdapter<SeatBid> {
        public ProtoAdapter_SeatBid() {
            super(FieldEncoding.LENGTH_DELIMITED, SeatBid.class);
        }

        @Override
        public int encodedSize(SeatBid value) {
            return Bid.ADAPTER.asRepeated().encodedSizeWithTag(1, value.bid) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, SeatBid value) throws IOException {
            Bid.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.bid);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public SeatBid decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.bid.add(Bid.ADAPTER.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public SeatBid redact(SeatBid value) {
            Builder builder = value.newBuilder();
            Internal.redactElements(builder.bid, Bid.ADAPTER);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
