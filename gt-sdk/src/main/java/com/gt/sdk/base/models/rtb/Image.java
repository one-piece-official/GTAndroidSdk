// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: gt_ad_response.proto
package com.gt.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;


public final class Image extends AndroidMessage<Image, Image.Builder> {
    public static final ProtoAdapter<Image> ADAPTER = new ProtoAdapter_Image();

    public static final Parcelable.Creator<Image> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_W = 0;

    public static final Integer DEFAULT_H = 0;

    public static final String DEFAULT_URL = "";

    /**
     * 图片宽度
     */
    @WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#INT32")
    public final Integer w;

    /**
     * 图片高度
     */
    @WireField(tag = 2, adapter = "com.squareup.wire.ProtoAdapter#INT32")
    public final Integer h;

    /**
     * 图片 URL
     */
    @WireField(tag = 3, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String url;

    public Image(Integer w, Integer h, String url) {
        this(w, h, url, ByteString.EMPTY);
    }

    public Image(Integer w, Integer h, String url, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.w = w;
        this.h = h;
        this.url = url;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.w = w;
        builder.h = h;
        builder.url = url;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Image)) return false;
        Image o = (Image) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(w, o.w) && Internal.equals(h, o.h) && Internal.equals(url, o.url);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (w != null ? w.hashCode() : 0);
            result = result * 37 + (h != null ? h.hashCode() : 0);
            result = result * 37 + (url != null ? url.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (w != null) builder.append(", w=").append(w);
        if (h != null) builder.append(", h=").append(h);
        if (url != null) builder.append(", url=").append(url);
        return builder.replace(0, 2, "Image{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Image, Builder> {
        public Integer w;

        public Integer h;

        public String url;

        public Builder() {
        }

        /**
         * 图片宽度
         */
        public Builder w(Integer w) {
            this.w = w;
            return this;
        }

        /**
         * 图片高度
         */
        public Builder h(Integer h) {
            this.h = h;
            return this;
        }

        /**
         * 图片 URL
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        @Override
        public Image build() {
            return new Image(w, h, url, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Image extends ProtoAdapter<Image> {
        public ProtoAdapter_Image() {
            super(FieldEncoding.LENGTH_DELIMITED, Image.class);
        }

        @Override
        public int encodedSize(Image value) {
            return ProtoAdapter.INT32.encodedSizeWithTag(1, value.w) + ProtoAdapter.INT32.encodedSizeWithTag(2, value.h) + ProtoAdapter.STRING.encodedSizeWithTag(3, value.url) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Image value) throws IOException {
            ProtoAdapter.INT32.encodeWithTag(writer, 1, value.w);
            ProtoAdapter.INT32.encodeWithTag(writer, 2, value.h);
            ProtoAdapter.STRING.encodeWithTag(writer, 3, value.url);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Image decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.w(ProtoAdapter.INT32.decode(reader));
                        break;
                    case 2:
                        builder.h(ProtoAdapter.INT32.decode(reader));
                        break;
                    case 3:
                        builder.url(ProtoAdapter.STRING.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Image redact(Image value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
