// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: gt_ad_response.proto
package com.gt.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;

public final class BidResponse extends AndroidMessage<BidResponse, BidResponse.Builder> {
    public static final ProtoAdapter<BidResponse> ADAPTER = new ProtoAdapter_BidResponse();

    public static final Parcelable.Creator<BidResponse> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_REQUEST_ID = "";

    public static final String DEFAULT_BIDID = "";

    public static final Integer DEFAULT_CODE = 0;

    public static final Integer DEFAULT_NBS = 0;

    public static final Integer DEFAULT_NBT = 0;

    /**
     * 对应请的request_id(内部生成的)
     */
    @WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String request_id;

    /**
     * 广告信息
     */
    @WireField(tag = 2, adapter = "com.gt.sdk.base.models.rtb.SeatBid#ADAPTER", label = WireField.Label.REPEATED)
    public final List<SeatBid> bids;

    @WireField(tag = 3, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String bidId;

    /**
     * 广告有效截止日期。Unix时间戳，单位秒。
     */
    @WireField(tag = 4, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer code;

    /**
     * 广告有效截止日期。Unix时间戳，单位秒。
     */
    @WireField(tag = 5, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer nbs;

    /**
     * 广告有效截止日期。Unix时间戳，单位秒。
     */
    @WireField(tag = 6, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer nbt;

    public BidResponse(String request_id, List<SeatBid> bids, String bidId, Integer code, Integer nbs, Integer nbt) {
        this(request_id, bids, bidId, code, nbs, nbt, ByteString.EMPTY);
    }

    public BidResponse(String request_id, List<SeatBid> bids, String bidId, Integer code, Integer nbs, Integer nbt, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.request_id = request_id;
        this.bids = Internal.immutableCopyOf("bids", bids);
        this.bidId = bidId;
        this.code = code;
        this.nbs = nbs;
        this.nbt = nbt;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.request_id = request_id;
        builder.bids = Internal.copyOf("bids", bids);
        builder.bidId = bidId;
        builder.code = code;
        builder.nbs = nbs;
        builder.nbt = nbt;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof BidResponse)) return false;
        BidResponse o = (BidResponse) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(request_id, o.request_id) && bids.equals(o.bids) && Internal.equals(bidId, o.bidId) && Internal.equals(code, o.code) && Internal.equals(nbs, o.nbs) && Internal.equals(nbt, o.nbt);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (request_id != null ? request_id.hashCode() : 0);
            result = result * 37 + bids.hashCode();
            result = result * 37 + (bidId != null ? bidId.hashCode() : 0);
            result = result * 37 + (code != null ? code.hashCode() : 0);
            result = result * 37 + (nbs != null ? nbs.hashCode() : 0);
            result = result * 37 + (nbt != null ? nbt.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (request_id != null) builder.append(", request_id=").append(request_id);
        if (!bids.isEmpty()) builder.append(", bids=").append(bids);
        if (bidId != null) builder.append(", bidId=").append(bidId);
        if (code != null) builder.append(", code=").append(code);
        if (nbs != null) builder.append(", nbs=").append(nbs);
        if (nbt != null) builder.append(", nbt=").append(nbt);
        return builder.replace(0, 2, "BidResponse{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<BidResponse, Builder> {
        public String request_id;

        public List<SeatBid> bids;

        public String bidId;

        public Integer code;

        public Integer nbs;

        public Integer nbt;

        public Builder() {
            bids = Internal.newMutableList();
        }

        /**
         * 对应请的request_id(内部生成的)
         */
        public Builder request_id(String request_id) {
            this.request_id = request_id;
            return this;
        }

        /**
         * 广告信息
         */
        public Builder bids(List<SeatBid> bids) {
            Internal.checkElementsNotNull(bids);
            this.bids = bids;
            return this;
        }

        public Builder bidId(String bidId) {
            this.bidId = bidId;
            return this;
        }

        /**
         * 广告有效截止日期。Unix时间戳，单位秒。
         */
        public Builder code(Integer code) {
            this.code = code;
            return this;
        }

        /**
         * 广告有效截止日期。Unix时间戳，单位秒。
         */
        public Builder nbs(Integer nbs) {
            this.nbs = nbs;
            return this;
        }

        /**
         * 广告有效截止日期。Unix时间戳，单位秒。
         */
        public Builder nbt(Integer nbt) {
            this.nbt = nbt;
            return this;
        }

        @Override
        public BidResponse build() {
            return new BidResponse(request_id, bids, bidId, code, nbs, nbt, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_BidResponse extends ProtoAdapter<BidResponse> {
        public ProtoAdapter_BidResponse() {
            super(FieldEncoding.LENGTH_DELIMITED, BidResponse.class);
        }

        @Override
        public int encodedSize(BidResponse value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.request_id) + SeatBid.ADAPTER.asRepeated().encodedSizeWithTag(2, value.bids) + ProtoAdapter.STRING.encodedSizeWithTag(3, value.bidId) + ProtoAdapter.UINT32.encodedSizeWithTag(4, value.code) + ProtoAdapter.UINT32.encodedSizeWithTag(5, value.nbs) + ProtoAdapter.UINT32.encodedSizeWithTag(6, value.nbt) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, BidResponse value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.request_id);
            SeatBid.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.bids);
            ProtoAdapter.STRING.encodeWithTag(writer, 3, value.bidId);
            ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.code);
            ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.nbs);
            ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.nbt);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public BidResponse decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.request_id(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.bids.add(SeatBid.ADAPTER.decode(reader));
                        break;
                    case 3:
                        builder.bidId(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 4:
                        builder.code(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 5:
                        builder.nbs(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 6:
                        builder.nbt(ProtoAdapter.UINT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public BidResponse redact(BidResponse value) {
            Builder builder = value.newBuilder();
            Internal.redactElements(builder.bids, SeatBid.ADAPTER);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
