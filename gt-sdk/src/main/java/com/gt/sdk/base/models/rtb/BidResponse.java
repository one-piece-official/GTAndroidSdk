// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: gt_ad_response.proto
package com.gt.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;

public final class BidResponse extends AndroidMessage<BidResponse, BidResponse.Builder> {
    public static final ProtoAdapter<BidResponse> ADAPTER = new ProtoAdapter_BidResponse();

    public static final Parcelable.Creator<BidResponse> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_ID = "";

    public static final String DEFAULT_BIDID = "";

    public static final Integer DEFAULT_CODE = 0;

    public static final Integer DEFAULT_NBS = 0;

    public static final Integer DEFAULT_NBT = 0;

    /**
     * 对应请求中的 Bid Request 的 id
     */
    @WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String id;

    /**
     * 本次响应标识 ID，用于日志和后续调试
     */
    @WireField(tag = 2, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String bidid;

    /**
     * 响应交易对象，查看 SeatBid 对象， 没有且code为0表示未填充
     */
    @WireField(tag = 3, adapter = "com.gt.sdk.base.models.rtb.SeatBid#ADAPTER")
    public final SeatBid seatbid;

    /**
     * 状态码
     */
    @WireField(tag = 4, adapter = "com.squareup.wire.ProtoAdapter#INT32")
    public final Integer code;

    /**
     * 短时屏蔽状态
     */
    @WireField(tag = 5, adapter = "com.squareup.wire.ProtoAdapter#INT32")
    public final Integer nbs;

    /**
     * 短时屏蔽时间，单位s
     */
    @WireField(tag = 6, adapter = "com.squareup.wire.ProtoAdapter#INT32")
    public final Integer nbt;

    public BidResponse(String id, String bidid, SeatBid seatbid, Integer code, Integer nbs, Integer nbt) {
        this(id, bidid, seatbid, code, nbs, nbt, ByteString.EMPTY);
    }

    public BidResponse(String id, String bidid, SeatBid seatbid, Integer code, Integer nbs, Integer nbt, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.id = id;
        this.bidid = bidid;
        this.seatbid = seatbid;
        this.code = code;
        this.nbs = nbs;
        this.nbt = nbt;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.id = id;
        builder.bidid = bidid;
        builder.seatbid = seatbid;
        builder.code = code;
        builder.nbs = nbs;
        builder.nbt = nbt;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof BidResponse)) return false;
        BidResponse o = (BidResponse) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(id, o.id) && Internal.equals(bidid, o.bidid) && Internal.equals(seatbid, o.seatbid) && Internal.equals(code, o.code) && Internal.equals(nbs, o.nbs) && Internal.equals(nbt, o.nbt);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (id != null ? id.hashCode() : 0);
            result = result * 37 + (bidid != null ? bidid.hashCode() : 0);
            result = result * 37 + (seatbid != null ? seatbid.hashCode() : 0);
            result = result * 37 + (code != null ? code.hashCode() : 0);
            result = result * 37 + (nbs != null ? nbs.hashCode() : 0);
            result = result * 37 + (nbt != null ? nbt.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (id != null) builder.append(", id=").append(id);
        if (bidid != null) builder.append(", bidid=").append(bidid);
        if (seatbid != null) builder.append(", seatbid=").append(seatbid);
        if (code != null) builder.append(", code=").append(code);
        if (nbs != null) builder.append(", nbs=").append(nbs);
        if (nbt != null) builder.append(", nbt=").append(nbt);
        return builder.replace(0, 2, "BidResponse{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<BidResponse, Builder> {
        public String id;

        public String bidid;

        public SeatBid seatbid;

        public Integer code;

        public Integer nbs;

        public Integer nbt;

        public Builder() {
        }

        /**
         * 对应请求中的 Bid Request 的 id
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * 本次响应标识 ID，用于日志和后续调试
         */
        public Builder bidid(String bidid) {
            this.bidid = bidid;
            return this;
        }

        /**
         * 响应交易对象，查看 SeatBid 对象， 没有且code为0表示未填充
         */
        public Builder seatbid(SeatBid seatbid) {
            this.seatbid = seatbid;
            return this;
        }

        /**
         * 状态码
         */
        public Builder code(Integer code) {
            this.code = code;
            return this;
        }

        /**
         * 短时屏蔽状态
         */
        public Builder nbs(Integer nbs) {
            this.nbs = nbs;
            return this;
        }

        /**
         * 短时屏蔽时间，单位s
         */
        public Builder nbt(Integer nbt) {
            this.nbt = nbt;
            return this;
        }

        @Override
        public BidResponse build() {
            return new BidResponse(id, bidid, seatbid, code, nbs, nbt, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_BidResponse extends ProtoAdapter<BidResponse> {
        public ProtoAdapter_BidResponse() {
            super(FieldEncoding.LENGTH_DELIMITED, BidResponse.class);
        }

        @Override
        public int encodedSize(BidResponse value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.id) + ProtoAdapter.STRING.encodedSizeWithTag(2, value.bidid) + SeatBid.ADAPTER.encodedSizeWithTag(3, value.seatbid) + ProtoAdapter.INT32.encodedSizeWithTag(4, value.code) + ProtoAdapter.INT32.encodedSizeWithTag(5, value.nbs) + ProtoAdapter.INT32.encodedSizeWithTag(6, value.nbt) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, BidResponse value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
            ProtoAdapter.STRING.encodeWithTag(writer, 2, value.bidid);
            SeatBid.ADAPTER.encodeWithTag(writer, 3, value.seatbid);
            ProtoAdapter.INT32.encodeWithTag(writer, 4, value.code);
            ProtoAdapter.INT32.encodeWithTag(writer, 5, value.nbs);
            ProtoAdapter.INT32.encodeWithTag(writer, 6, value.nbt);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public BidResponse decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.id(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.bidid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 3:
                        builder.seatbid(SeatBid.ADAPTER.decode(reader));
                        break;
                    case 4:
                        builder.code(ProtoAdapter.INT32.decode(reader));
                        break;
                    case 5:
                        builder.nbs(ProtoAdapter.INT32.decode(reader));
                        break;
                    case 6:
                        builder.nbt(ProtoAdapter.INT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public BidResponse redact(BidResponse value) {
            Builder builder = value.newBuilder();
            if (builder.seatbid != null) builder.seatbid = SeatBid.ADAPTER.redact(builder.seatbid);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
