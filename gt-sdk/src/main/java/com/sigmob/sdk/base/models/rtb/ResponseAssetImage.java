// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_response.proto
package com.sigmob.sdk.base.models.rtb;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class ResponseAssetImage extends AndroidMessage<ResponseAssetImage, ResponseAssetImage.Builder> {
    public static final ProtoAdapter<ResponseAssetImage> ADAPTER = new ProtoAdapter_ResponseAssetImage();

    public static final Parcelable.Creator<ResponseAssetImage> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_URL = "";

    public static final Integer DEFAULT_W = 0;

    public static final Integer DEFAULT_H = 0;

    /**
     * 图片url
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String url;

    /**
     * 原生广告位宽度，原生对象下必填
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer w;

    /**
     * 原生广告位高度；原生对象下必填
     */
    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer h;

    public ResponseAssetImage(String url, Integer w, Integer h) {
        this(url, w, h, ByteString.EMPTY);
    }

    public ResponseAssetImage(String url, Integer w, Integer h, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.url = url;
        this.w = w;
        this.h = h;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.url = url;
        builder.w = w;
        builder.h = h;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof ResponseAssetImage)) return false;
        ResponseAssetImage o = (ResponseAssetImage) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(url, o.url)
                && Internal.equals(w, o.w)
                && Internal.equals(h, o.h);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (url != null ? url.hashCode() : 0);
            result = result * 37 + (w != null ? w.hashCode() : 0);
            result = result * 37 + (h != null ? h.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (url != null) builder.append(", url=").append(url);
        if (w != null) builder.append(", w=").append(w);
        if (h != null) builder.append(", h=").append(h);
        return builder.replace(0, 2, "ResponseAssetImage{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<ResponseAssetImage, Builder> {
        public String url = DEFAULT_URL;

        public Integer w = DEFAULT_W;

        public Integer h = DEFAULT_H;

        public Builder() {
        }

        /**
         * 图片url
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * 原生广告位宽度，原生对象下必填
         */
        public Builder w(Integer w) {
            this.w = w;
            return this;
        }

        /**
         * 原生广告位高度；原生对象下必填
         */
        public Builder h(Integer h) {
            this.h = h;
            return this;
        }

        @Override
        public ResponseAssetImage build() {
            return new ResponseAssetImage(url, w, h, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_ResponseAssetImage extends ProtoAdapter<ResponseAssetImage> {
        public ProtoAdapter_ResponseAssetImage() {
            super(FieldEncoding.LENGTH_DELIMITED, ResponseAssetImage.class);
        }

        @Override
        public int encodedSize(ResponseAssetImage value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.url)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.w)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.h)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, ResponseAssetImage value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.url);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.w);
            ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.h);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public ResponseAssetImage decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.url(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.w(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 3:
                        builder.h(ProtoAdapter.UINT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public ResponseAssetImage redact(ResponseAssetImage value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
