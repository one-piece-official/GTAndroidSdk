// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_response.proto
package com.sigmob.sdk.base.models.rtb;

import android.os.Parcelable;
import android.text.TextUtils;
import android.util.Log;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;
import java.util.UUID;


public final class Template extends AndroidMessage<Template, Template.Builder> {
    public static final ProtoAdapter<Template> ADAPTER = new ProtoAdapter_Template();

    public static final Parcelable.Creator<Template> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_TYPE = 0;

    public String templateId;


    public static final ByteString DEFAULT_CONTEXT = ByteString.EMPTY;

    /**
     * 1: 在线加载URL方式；2: html source方式；3: tgz压缩包，加载根目录endcard.html包方式
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer type;

    /**
     * 中文需要UTF-8编码，存放对应的html内容或者URL
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#BYTES"
    )
    public final ByteString context;

    public Template(Integer type, ByteString context) {
        this(type, context, ByteString.EMPTY);
    }

    public Template(Integer type, ByteString context, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.type = type;
        this.context = context;
        if (type == 2 && TextUtils.isEmpty(templateId)) {
            templateId = UUID.randomUUID().toString();
        }
        Log.d("templateId", "--------Template--------" + templateId);
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.type = type;
        builder.context = context;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Template)) return false;
        Template o = (Template) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(type, o.type)
                && Internal.equals(context, o.context);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (type != null ? type.hashCode() : 0);
            result = result * 37 + (context != null ? context.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (type != null) builder.append(", type=").append(type);
        if (context != null) builder.append(", context=").append(context);
        return builder.replace(0, 2, "Template{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Template, Builder> {
        public Integer type = DEFAULT_TYPE;

        public ByteString context;

        public Builder() {
        }

        /**
         * 1: 在线加载URL方式；2: html source方式；3: tgz压缩包，加载根目录endcard.html包方式
         */
        public Builder type(Integer type) {
            this.type = type;
            return this;
        }

        /**
         * 中文需要UTF-8编码，存放对应的html内容或者URL
         */
        public Builder context(ByteString context) {
            this.context = context;
            return this;
        }

        @Override
        public Template build() {
            return new Template(type, context, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Template extends ProtoAdapter<Template> {
        public ProtoAdapter_Template() {
            super(FieldEncoding.LENGTH_DELIMITED, Template.class);
        }

        @Override
        public int encodedSize(Template value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.type)
                    + ProtoAdapter.BYTES.encodedSizeWithTag(2, value.context)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Template value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.type);
            ProtoAdapter.BYTES.encodeWithTag(writer, 2, value.context);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Template decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.type(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.context(ProtoAdapter.BYTES.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Template redact(Template value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
