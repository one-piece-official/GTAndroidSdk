// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_ssp_config.proto
package com.sigmob.sdk.base.models.config;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

/**
 * 配置信息
 */
public final class SigmobSdkConfig extends AndroidMessage<SigmobSdkConfig, SigmobSdkConfig.Builder> {
    public static final ProtoAdapter<SigmobSdkConfig> ADAPTER = new ProtoAdapter_SdkConfig();

    public static final Parcelable.Creator<SigmobSdkConfig> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    @WireField(
            tag = 1,
            adapter = "com.sigmob.sdk.base.models.SigmobCommon#ADAPTER"
    )
    public final SigmobCommon sigmobCommon_config;

    @WireField(
            tag = 3,
            adapter = "com.sigmob.sdk.base.models.SigmobAndroid#ADAPTER"
    )
    public final SigmobAndroid sigmobAndroid_config;

    public SigmobSdkConfig(SigmobCommon sigmobCommon_config, SigmobAndroid sigmobAndroid_config) {
        this(sigmobCommon_config, sigmobAndroid_config, ByteString.EMPTY);
    }

    public SigmobSdkConfig(SigmobCommon sigmobCommon_config, SigmobAndroid sigmobAndroid_config,
                           ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.sigmobCommon_config = sigmobCommon_config;
        this.sigmobAndroid_config = sigmobAndroid_config;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.sigmobCommon_config = sigmobCommon_config;
        builder.sigmobAndroid_config = sigmobAndroid_config;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof SigmobSdkConfig)) return false;
        SigmobSdkConfig o = (SigmobSdkConfig) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(sigmobCommon_config, o.sigmobCommon_config)
                && Internal.equals(sigmobAndroid_config, o.sigmobAndroid_config);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (sigmobCommon_config != null ? sigmobCommon_config.hashCode() : 0);
            result = result * 37 + (sigmobAndroid_config != null ? sigmobAndroid_config.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (sigmobCommon_config != null)
            builder.append(", sigmobCommon_config=").append(sigmobCommon_config);
        if (sigmobAndroid_config != null)
            builder.append(", sigmobAndroid_config=").append(sigmobAndroid_config);
        return builder.replace(0, 2, "SigmobSdkConfig{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<SigmobSdkConfig, Builder> {
        public SigmobCommon sigmobCommon_config;

        public SigmobAndroid sigmobAndroid_config;

        public Builder() {
        }

        public Builder common_config(SigmobCommon sigmobCommon_config) {
            this.sigmobCommon_config = sigmobCommon_config;
            return this;
        }


        public Builder android_config(SigmobAndroid sigmobAndroid_config) {
            this.sigmobAndroid_config = sigmobAndroid_config;
            return this;
        }

        @Override
        public SigmobSdkConfig build() {
            return new SigmobSdkConfig(sigmobCommon_config, sigmobAndroid_config, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_SdkConfig extends ProtoAdapter<SigmobSdkConfig> {
        public ProtoAdapter_SdkConfig() {
            super(FieldEncoding.LENGTH_DELIMITED, SigmobSdkConfig.class);
        }

        @Override
        public int encodedSize(SigmobSdkConfig value) {
            return SigmobCommon.ADAPTER.encodedSizeWithTag(1, value.sigmobCommon_config)
                    + SigmobAndroid.ADAPTER.encodedSizeWithTag(3, value.sigmobAndroid_config)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, SigmobSdkConfig value) throws IOException {
            SigmobCommon.ADAPTER.encodeWithTag(writer, 1, value.sigmobCommon_config);
            SigmobAndroid.ADAPTER.encodeWithTag(writer, 3, value.sigmobAndroid_config);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public SigmobSdkConfig decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.common_config(SigmobCommon.ADAPTER.decode(reader));
                        break;
                    case 3:
                        builder.android_config(SigmobAndroid.ADAPTER.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public SigmobSdkConfig redact(SigmobSdkConfig value) {
            Builder builder = value.newBuilder();
            if (builder.sigmobCommon_config != null)
                builder.sigmobCommon_config = SigmobCommon.ADAPTER.redact(builder.sigmobCommon_config);
            if (builder.sigmobAndroid_config != null)
                builder.sigmobAndroid_config = SigmobAndroid.ADAPTER.redact(builder.sigmobAndroid_config);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
